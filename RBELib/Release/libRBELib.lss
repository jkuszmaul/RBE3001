In archive libRBELib.a:

SetServo.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initAltCom 00000038  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setCharDebug 0000000e  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.coPrintf 00000018  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .rodata.str1.1 00000014  00000000  00000000  00000092  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .text.setServo 0000005c  00000000  00000000  000000a6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .comment      00000012  00000000  00000000  00000102  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initAltCom:

00000000 <initAltCom>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <initAltCom+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <initAltCom>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	31 09       	sbc	r19, r1
  22:	30 93 c5 00 	sts	0x00C5, r19
  26:	20 93 c4 00 	sts	0x00C4, r18
  2a:	88 e1       	ldi	r24, 0x18	; 24
  2c:	80 93 c1 00 	sts	0x00C1, r24
  30:	86 e0       	ldi	r24, 0x06	; 6
  32:	80 93 c2 00 	sts	0x00C2, r24
  36:	08 95       	ret

Disassembly of section .text.setCharDebug:

00000038 <setCharDebug>:
  38:	90 91 c0 00 	lds	r25, 0x00C0
  3c:	95 ff       	sbrs	r25, 5
  3e:	00 c0       	rjmp	.+0      	; 0x40 <setCharDebug+0x8>
  40:	80 93 c6 00 	sts	0x00C6, r24
  44:	08 95       	ret

Disassembly of section .text.coPrintf:

0000007e <coPrintf>:
  7e:	cf 93       	push	r28
  80:	df 93       	push	r29
  82:	ec 01       	movw	r28, r24
  84:	89 91       	ld	r24, Y+
  86:	88 23       	and	r24, r24
  88:	01 f0       	breq	.+0      	; 0x8a <coPrintf+0xc>
  8a:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <coPrintf+0x12>
  90:	df 91       	pop	r29
  92:	cf 91       	pop	r28
  94:	08 95       	ret

Disassembly of section .text.setServo:

0000023c <setServo>:
 23c:	0f 93       	push	r16
 23e:	1f 93       	push	r17
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	cd b7       	in	r28, 0x3d	; 61
 246:	de b7       	in	r29, 0x3e	; 62
 248:	64 97       	sbiw	r28, 0x14	; 20
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	f8 94       	cli
 24e:	de bf       	out	0x3e, r29	; 62
 250:	0f be       	out	0x3f, r0	; 63
 252:	cd bf       	out	0x3d, r28	; 61
 254:	7f 93       	push	r23
 256:	6f 93       	push	r22
 258:	9f 93       	push	r25
 25a:	8f 93       	push	r24
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	9f 93       	push	r25
 262:	8f 93       	push	r24
 264:	8e 01       	movw	r16, r28
 266:	0f 5f       	subi	r16, 0xFF	; 255
 268:	1f 4f       	sbci	r17, 0xFF	; 255
 26a:	1f 93       	push	r17
 26c:	0f 93       	push	r16
 26e:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 272:	c8 01       	movw	r24, r16
 274:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	f8 94       	cli
 27c:	de bf       	out	0x3e, r29	; 62
 27e:	0f be       	out	0x3f, r0	; 63
 280:	cd bf       	out	0x3d, r28	; 61
 282:	64 96       	adiw	r28, 0x14	; 20
 284:	0f b6       	in	r0, 0x3f	; 63
 286:	f8 94       	cli
 288:	de bf       	out	0x3e, r29	; 62
 28a:	0f be       	out	0x3f, r0	; 63
 28c:	cd bf       	out	0x3d, r28	; 61
 28e:	df 91       	pop	r29
 290:	cf 91       	pop	r28
 292:	1f 91       	pop	r17
 294:	0f 91       	pop	r16
 296:	08 95       	ret

ADC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initADC 0000006e  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.clearADC 00000014  00000000  00000000  000000a2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.getADCFree 0000000a  00000000  00000000  000000b6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.changeADC 0000001c  00000000  00000000  000000c0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.getADC  0000002a  00000000  00000000  000000dc  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.setADCInterrupt 0000000a  00000000  00000000  00000106  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.__vector_24 00000052  00000000  00000000  00000110  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .bss.g_ADCCallback 00000002  00000000  00000000  00000162  2**0
                  ALLOC
 11 .comment      00000012  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initADC:

00000000 <initADC>:
   0:	f8 94       	cli
   2:	88 30       	cpi	r24, 0x08	; 8
   4:	91 05       	cpc	r25, r1
   6:	04 f4       	brge	.+0      	; 0x8 <initADC+0x8>
   8:	91 b1       	in	r25, 0x01	; 1
   a:	21 e0       	ldi	r18, 0x01	; 1
   c:	30 e0       	ldi	r19, 0x00	; 0
   e:	08 2e       	mov	r0, r24
  10:	00 c0       	rjmp	.+0      	; 0x12 <initADC+0x12>
  12:	22 0f       	add	r18, r18
  14:	0a 94       	dec	r0
  16:	02 f4       	brpl	.+0      	; 0x18 <initADC+0x18>
  18:	20 95       	com	r18
  1a:	29 23       	and	r18, r25
  1c:	21 b9       	out	0x01, r18	; 1
  1e:	80 64       	ori	r24, 0x40	; 64
  20:	80 93 7c 00 	sts	0x007C, r24
  24:	20 91 7a 00 	lds	r18, 0x007A
  28:	27 60       	ori	r18, 0x07	; 7
  2a:	cb 01       	movw	r24, r22
  2c:	35 e0       	ldi	r19, 0x05	; 5
  2e:	88 0f       	add	r24, r24
  30:	99 1f       	adc	r25, r25
  32:	3a 95       	dec	r19
  34:	01 f4       	brne	.+0      	; 0x36 <initADC+0x36>
  36:	80 68       	ori	r24, 0x80	; 128
  38:	e3 e0       	ldi	r30, 0x03	; 3
  3a:	44 0f       	add	r20, r20
  3c:	55 1f       	adc	r21, r21
  3e:	ea 95       	dec	r30
  40:	01 f4       	brne	.+0      	; 0x42 <initADC+0x42>
  42:	84 2b       	or	r24, r20
  44:	28 2b       	or	r18, r24
  46:	20 93 7a 00 	sts	0x007A, r18
  4a:	61 15       	cp	r22, r1
  4c:	71 05       	cpc	r23, r1
  4e:	01 f4       	brne	.+0      	; 0x50 <initADC+0x50>
  50:	80 91 7b 00 	lds	r24, 0x007B
  54:	00 c0       	rjmp	.+0      	; 0x56 <initADC+0x56>
  56:	80 e0       	ldi	r24, 0x00	; 0
  58:	80 93 7b 00 	sts	0x007B, r24
  5c:	67 2b       	or	r22, r23
  5e:	01 f0       	breq	.+0      	; 0x60 <initADC+0x60>
  60:	80 91 7a 00 	lds	r24, 0x007A
  64:	80 64       	ori	r24, 0x40	; 64
  66:	80 93 7a 00 	sts	0x007A, r24
  6a:	78 94       	sei
  6c:	08 95       	ret

Disassembly of section .text.clearADC:

0000006e <clearADC>:
  6e:	ea e7       	ldi	r30, 0x7A	; 122
  70:	f0 e0       	ldi	r31, 0x00	; 0
  72:	80 81       	ld	r24, Z
  74:	8f 77       	andi	r24, 0x7F	; 127
  76:	80 83       	st	Z, r24
  78:	10 92 79 00 	sts	0x0079, r1
  7c:	10 92 78 00 	sts	0x0078, r1
  80:	08 95       	ret

Disassembly of section .text.getADCFree:

000000f0 <getADCFree>:
  f0:	80 91 78 00 	lds	r24, 0x0078
  f4:	90 91 79 00 	lds	r25, 0x0079
  f8:	08 95       	ret

Disassembly of section .text.changeADC:

000001ea <changeADC>:
 1ea:	88 30       	cpi	r24, 0x08	; 8
 1ec:	91 05       	cpc	r25, r1
 1ee:	04 f4       	brge	.+0      	; 0x1f0 <changeADC+0x6>
 1f0:	90 91 7c 00 	lds	r25, 0x007C
 1f4:	90 7e       	andi	r25, 0xE0	; 224
 1f6:	90 93 7c 00 	sts	0x007C, r25
 1fa:	90 91 7c 00 	lds	r25, 0x007C
 1fe:	98 2b       	or	r25, r24
 200:	90 93 7c 00 	sts	0x007C, r25
 204:	08 95       	ret

Disassembly of section .text.getADC:

000003f0 <getADC>:
 3f0:	20 91 7a 00 	lds	r18, 0x007A
 3f4:	2f 7d       	andi	r18, 0xDF	; 223
 3f6:	20 93 7a 00 	sts	0x007A, r18
 3fa:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 3fe:	80 91 7a 00 	lds	r24, 0x007A
 402:	80 64       	ori	r24, 0x40	; 64
 404:	80 93 7a 00 	sts	0x007A, r24
 408:	80 91 7a 00 	lds	r24, 0x007A
 40c:	86 fd       	sbrc	r24, 6
 40e:	00 c0       	rjmp	.+0      	; 0x410 <getADC+0x20>
 410:	80 91 78 00 	lds	r24, 0x0078
 414:	90 91 79 00 	lds	r25, 0x0079
 418:	08 95       	ret

Disassembly of section .text.setADCInterrupt:

0000080a <setADCInterrupt>:
 80a:	90 93 00 00 	sts	0x0000, r25
 80e:	80 93 00 00 	sts	0x0000, r24
 812:	08 95       	ret

Disassembly of section .text.__vector_24:

0000101e <__vector_24>:
    101e:	1f 92       	push	r1
    1020:	0f 92       	push	r0
    1022:	0f b6       	in	r0, 0x3f	; 63
    1024:	0f 92       	push	r0
    1026:	11 24       	eor	r1, r1
    1028:	2f 93       	push	r18
    102a:	3f 93       	push	r19
    102c:	4f 93       	push	r20
    102e:	5f 93       	push	r21
    1030:	6f 93       	push	r22
    1032:	7f 93       	push	r23
    1034:	8f 93       	push	r24
    1036:	9f 93       	push	r25
    1038:	af 93       	push	r26
    103a:	bf 93       	push	r27
    103c:	ef 93       	push	r30
    103e:	ff 93       	push	r31
    1040:	e0 91 00 00 	lds	r30, 0x0000
    1044:	f0 91 00 00 	lds	r31, 0x0000
    1048:	30 97       	sbiw	r30, 0x00	; 0
    104a:	01 f0       	breq	.+0      	; 0x104c <__vector_24+0x2e>
    104c:	09 95       	icall
    104e:	ff 91       	pop	r31
    1050:	ef 91       	pop	r30
    1052:	bf 91       	pop	r27
    1054:	af 91       	pop	r26
    1056:	9f 91       	pop	r25
    1058:	8f 91       	pop	r24
    105a:	7f 91       	pop	r23
    105c:	6f 91       	pop	r22
    105e:	5f 91       	pop	r21
    1060:	4f 91       	pop	r20
    1062:	3f 91       	pop	r19
    1064:	2f 91       	pop	r18
    1066:	0f 90       	pop	r0
    1068:	0f be       	out	0x3f, r0	; 63
    106a:	0f 90       	pop	r0
    106c:	1f 90       	pop	r1
    106e:	18 95       	reti

DAC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setDAC  00000046  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.resetDAC 00000056  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  000000d0  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setDAC:

00000000 <setDAC>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	eb 01       	movw	r28, r22
   6:	85 30       	cpi	r24, 0x05	; 5
   8:	91 05       	cpc	r25, r1
   a:	00 f4       	brcc	.+0      	; 0xc <setDAC+0xc>
   c:	90 91 2b 00 	lds	r25, 0x002B
  10:	9f 7e       	andi	r25, 0xEF	; 239
  12:	90 93 2b 00 	sts	0x002B, r25
  16:	80 63       	ori	r24, 0x30	; 48
  18:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  1c:	ce 01       	movw	r24, r28
  1e:	24 e0       	ldi	r18, 0x04	; 4
  20:	95 95       	asr	r25
  22:	87 95       	ror	r24
  24:	2a 95       	dec	r18
  26:	01 f4       	brne	.+0      	; 0x28 <setDAC+0x28>
  28:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  2c:	8c 2f       	mov	r24, r28
  2e:	82 95       	swap	r24
  30:	80 7f       	andi	r24, 0xF0	; 240
  32:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  36:	80 91 2b 00 	lds	r24, 0x002B
  3a:	80 61       	ori	r24, 0x10	; 16
  3c:	80 93 2b 00 	sts	0x002B, r24
  40:	df 91       	pop	r29
  42:	cf 91       	pop	r28
  44:	08 95       	ret

Disassembly of section .text.resetDAC:

00000046 <resetDAC>:
  46:	80 91 2b 00 	lds	r24, 0x002B
  4a:	8f 7e       	andi	r24, 0xEF	; 239
  4c:	80 93 2b 00 	sts	0x002B, r24
  50:	8f e4       	ldi	r24, 0x4F	; 79
  52:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  56:	80 e0       	ldi	r24, 0x00	; 0
  58:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  5c:	80 e0       	ldi	r24, 0x00	; 0
  5e:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  62:	80 91 2b 00 	lds	r24, 0x002B
  66:	80 61       	ori	r24, 0x10	; 16
  68:	80 93 2b 00 	sts	0x002B, r24
  6c:	86 e0       	ldi	r24, 0x06	; 6
  6e:	8a 95       	dec	r24
  70:	01 f4       	brne	.+0      	; 0x72 <resetDAC+0x2c>
  72:	00 00       	nop
  74:	80 91 2b 00 	lds	r24, 0x002B
  78:	8f 7e       	andi	r24, 0xEF	; 239
  7a:	80 93 2b 00 	sts	0x002B, r24
  7e:	8f e1       	ldi	r24, 0x1F	; 31
  80:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  90:	80 91 2b 00 	lds	r24, 0x002B
  94:	80 61       	ori	r24, 0x10	; 16
  96:	80 93 2b 00 	sts	0x002B, r24
  9a:	08 95       	ret

Debug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.printfRBE 0000000a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.initRBELib 00000018  00000000  00000000  0000003e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .data.RBEOut  0000000e  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  6 .comment      00000012  00000000  00000000  00000064  2**0
                  CONTENTS, READONLY

Disassembly of section .text.printfRBE:

00000000 <printfRBE>:
   0:	0e 94 00 00 	call	0	; 0x0 <printfRBE>
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text.initRBELib:

0000000a <initRBELib>:
   a:	80 e0       	ldi	r24, 0x00	; 0
   c:	90 e0       	ldi	r25, 0x00	; 0
   e:	90 93 00 00 	sts	0x0000, r25
  12:	80 93 00 00 	sts	0x0000, r24
  16:	60 e0       	ldi	r22, 0x00	; 0
  18:	72 ec       	ldi	r23, 0xC2	; 194
  1a:	81 e0       	ldi	r24, 0x01	; 1
  1c:	90 e0       	ldi	r25, 0x00	; 0
  1e:	0c 94 00 00 	jmp	0	; 0x0 <__tmp_reg__>

PID.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setConst 00000084  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.calcPID 0000029c  00000000  00000000  000000b8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.calcFF  0000007c  00000000  00000000  00000354  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .bss.prevError.1548 00000002  00000000  00000000  000003d0  2**0
                  ALLOC
  7 .bss.suml.1546 00000002  00000000  00000000  000003d0  2**0
                  ALLOC
  8 .bss.sumh.1547 00000002  00000000  00000000  000003d0  2**0
                  ALLOC
  9 .comment      00000012  00000000  00000000  000003d0  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setConst:

00000000 <setConst>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	88 23       	and	r24, r24
   e:	01 f0       	breq	.+0      	; 0x10 <setConst+0x10>
  10:	81 30       	cpi	r24, 0x01	; 1
  12:	01 f4       	brne	.+0      	; 0x14 <setConst+0x14>
  14:	40 93 00 00 	sts	0x0000, r20
  18:	50 93 00 00 	sts	0x0000, r21
  1c:	60 93 00 00 	sts	0x0000, r22
  20:	70 93 00 00 	sts	0x0000, r23
  24:	00 93 00 00 	sts	0x0000, r16
  28:	10 93 00 00 	sts	0x0000, r17
  2c:	20 93 00 00 	sts	0x0000, r18
  30:	30 93 00 00 	sts	0x0000, r19
  34:	c0 92 00 00 	sts	0x0000, r12
  38:	d0 92 00 00 	sts	0x0000, r13
  3c:	e0 92 00 00 	sts	0x0000, r14
  40:	f0 92 00 00 	sts	0x0000, r15
  44:	00 c0       	rjmp	.+0      	; 0x46 <setConst+0x46>
  46:	40 93 00 00 	sts	0x0000, r20
  4a:	50 93 00 00 	sts	0x0000, r21
  4e:	60 93 00 00 	sts	0x0000, r22
  52:	70 93 00 00 	sts	0x0000, r23
  56:	00 93 00 00 	sts	0x0000, r16
  5a:	10 93 00 00 	sts	0x0000, r17
  5e:	20 93 00 00 	sts	0x0000, r18
  62:	30 93 00 00 	sts	0x0000, r19
  66:	c0 92 00 00 	sts	0x0000, r12
  6a:	d0 92 00 00 	sts	0x0000, r13
  6e:	e0 92 00 00 	sts	0x0000, r14
  72:	f0 92 00 00 	sts	0x0000, r15
  76:	1f 91       	pop	r17
  78:	0f 91       	pop	r16
  7a:	ff 90       	pop	r15
  7c:	ef 90       	pop	r14
  7e:	df 90       	pop	r13
  80:	cf 90       	pop	r12
  82:	08 95       	ret

Disassembly of section .text.calcPID:

00000084 <calcPID>:
  84:	2f 92       	push	r2
  86:	3f 92       	push	r3
  88:	4f 92       	push	r4
  8a:	5f 92       	push	r5
  8c:	6f 92       	push	r6
  8e:	7f 92       	push	r7
  90:	8f 92       	push	r8
  92:	9f 92       	push	r9
  94:	af 92       	push	r10
  96:	bf 92       	push	r11
  98:	cf 92       	push	r12
  9a:	df 92       	push	r13
  9c:	ef 92       	push	r14
  9e:	ff 92       	push	r15
  a0:	0f 93       	push	r16
  a2:	1f 93       	push	r17
  a4:	cf 93       	push	r28
  a6:	df 93       	push	r29
  a8:	cd b7       	in	r28, 0x3d	; 61
  aa:	de b7       	in	r29, 0x3e	; 62
  ac:	60 97       	sbiw	r28, 0x10	; 16
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	f8 94       	cli
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	78 8b       	std	Y+16, r23	; 0x10
  ba:	6f 87       	std	Y+15, r22	; 0x0f
  bc:	5a 83       	std	Y+2, r21	; 0x02
  be:	49 83       	std	Y+1, r20	; 0x01
  c0:	23 2b       	or	r18, r19
  c2:	01 f0       	breq	.+0      	; 0xc4 <calcPID+0x40>
  c4:	81 11       	cpse	r24, r1
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <calcPID+0x44>
  c8:	10 92 00 00 	sts	0x0000, r1
  cc:	10 92 00 00 	sts	0x0000, r1
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <calcPID+0x4e>
  d2:	10 92 00 00 	sts	0x0000, r1
  d6:	10 92 00 00 	sts	0x0000, r1
  da:	00 c0       	rjmp	.+0      	; 0xdc <calcPID+0x58>
  dc:	81 11       	cpse	r24, r1
  de:	00 c0       	rjmp	.+0      	; 0xe0 <calcPID+0x5c>
  e0:	80 90 00 00 	lds	r8, 0x0000
  e4:	90 90 00 00 	lds	r9, 0x0000
  e8:	a0 90 00 00 	lds	r10, 0x0000
  ec:	b0 90 00 00 	lds	r11, 0x0000
  f0:	c0 90 00 00 	lds	r12, 0x0000
  f4:	d0 90 00 00 	lds	r13, 0x0000
  f8:	e0 90 00 00 	lds	r14, 0x0000
  fc:	f0 90 00 00 	lds	r15, 0x0000
 100:	40 90 00 00 	lds	r4, 0x0000
 104:	50 90 00 00 	lds	r5, 0x0000
 108:	60 90 00 00 	lds	r6, 0x0000
 10c:	70 90 00 00 	lds	r7, 0x0000
 110:	20 90 00 00 	lds	r2, 0x0000
 114:	30 90 00 00 	lds	r3, 0x0000
 118:	20 e0       	ldi	r18, 0x00	; 0
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	3e 83       	std	Y+6, r19	; 0x06
 11e:	2d 83       	std	Y+5, r18	; 0x05
 120:	00 c0       	rjmp	.+0      	; 0x122 <calcPID+0x9e>
 122:	80 90 00 00 	lds	r8, 0x0000
 126:	90 90 00 00 	lds	r9, 0x0000
 12a:	a0 90 00 00 	lds	r10, 0x0000
 12e:	b0 90 00 00 	lds	r11, 0x0000
 132:	c0 90 00 00 	lds	r12, 0x0000
 136:	d0 90 00 00 	lds	r13, 0x0000
 13a:	e0 90 00 00 	lds	r14, 0x0000
 13e:	f0 90 00 00 	lds	r15, 0x0000
 142:	40 90 00 00 	lds	r4, 0x0000
 146:	50 90 00 00 	lds	r5, 0x0000
 14a:	60 90 00 00 	lds	r6, 0x0000
 14e:	70 90 00 00 	lds	r7, 0x0000
 152:	20 90 00 00 	lds	r2, 0x0000
 156:	30 90 00 00 	lds	r3, 0x0000
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	9e 83       	std	Y+6, r25	; 0x06
 160:	8d 83       	std	Y+5, r24	; 0x05
 162:	00 91 00 00 	lds	r16, 0x0000
 166:	10 91 00 00 	lds	r17, 0x0000
 16a:	b8 01       	movw	r22, r16
 16c:	88 27       	eor	r24, r24
 16e:	77 fd       	sbrc	r23, 7
 170:	80 95       	com	r24
 172:	98 2f       	mov	r25, r24
 174:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 178:	6f 83       	std	Y+7, r22	; 0x07
 17a:	78 87       	std	Y+8, r23	; 0x08
 17c:	89 87       	std	Y+9, r24	; 0x09
 17e:	9a 87       	std	Y+10, r25	; 0x0a
 180:	a7 01       	movw	r20, r14
 182:	96 01       	movw	r18, r12
 184:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 188:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 18c:	6b 87       	std	Y+11, r22	; 0x0b
 18e:	7c 87       	std	Y+12, r23	; 0x0c
 190:	8d 87       	std	Y+13, r24	; 0x0d
 192:	9e 87       	std	Y+14, r25	; 0x0e
 194:	ef 85       	ldd	r30, Y+15	; 0x0f
 196:	f8 89       	ldd	r31, Y+16	; 0x10
 198:	29 81       	ldd	r18, Y+1	; 0x01
 19a:	3a 81       	ldd	r19, Y+2	; 0x02
 19c:	e2 1b       	sub	r30, r18
 19e:	f3 0b       	sbc	r31, r19
 1a0:	f8 8b       	std	Y+16, r31	; 0x10
 1a2:	ef 87       	std	Y+15, r30	; 0x0f
 1a4:	bf 01       	movw	r22, r30
 1a6:	88 27       	eor	r24, r24
 1a8:	77 fd       	sbrc	r23, 7
 1aa:	80 95       	com	r24
 1ac:	98 2f       	mov	r25, r24
 1ae:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 1b2:	69 83       	std	Y+1, r22	; 0x01
 1b4:	7a 83       	std	Y+2, r23	; 0x02
 1b6:	8b 83       	std	Y+3, r24	; 0x03
 1b8:	9c 83       	std	Y+4, r25	; 0x04
 1ba:	9b 01       	movw	r18, r22
 1bc:	ac 01       	movw	r20, r24
 1be:	c5 01       	movw	r24, r10
 1c0:	b4 01       	movw	r22, r8
 1c2:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 1c6:	4b 01       	movw	r8, r22
 1c8:	5c 01       	movw	r10, r24
 1ca:	b1 01       	movw	r22, r2
 1cc:	88 27       	eor	r24, r24
 1ce:	77 fd       	sbrc	r23, 7
 1d0:	80 95       	com	r24
 1d2:	98 2f       	mov	r25, r24
 1d4:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 1d8:	9b 01       	movw	r18, r22
 1da:	ac 01       	movw	r20, r24
 1dc:	c7 01       	movw	r24, r14
 1de:	b6 01       	movw	r22, r12
 1e0:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 1e4:	9b 01       	movw	r18, r22
 1e6:	ac 01       	movw	r20, r24
 1e8:	c5 01       	movw	r24, r10
 1ea:	b4 01       	movw	r22, r8
 1ec:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 1f0:	6b 01       	movw	r12, r22
 1f2:	7c 01       	movw	r14, r24
 1f4:	80 91 00 00 	lds	r24, 0x0000
 1f8:	90 91 00 00 	lds	r25, 0x0000
 1fc:	6f 85       	ldd	r22, Y+15	; 0x0f
 1fe:	78 89       	ldd	r23, Y+16	; 0x10
 200:	68 1b       	sub	r22, r24
 202:	79 0b       	sbc	r23, r25
 204:	88 27       	eor	r24, r24
 206:	77 fd       	sbrc	r23, 7
 208:	80 95       	com	r24
 20a:	98 2f       	mov	r25, r24
 20c:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 210:	80 90 00 00 	lds	r8, 0x0000
 214:	90 90 00 00 	lds	r9, 0x0000
 218:	a0 90 00 00 	lds	r10, 0x0000
 21c:	b0 90 00 00 	lds	r11, 0x0000
 220:	a5 01       	movw	r20, r10
 222:	94 01       	movw	r18, r8
 224:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 228:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 22c:	88 27       	eor	r24, r24
 22e:	77 fd       	sbrc	r23, 7
 230:	80 95       	com	r24
 232:	98 2f       	mov	r25, r24
 234:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 238:	9b 01       	movw	r18, r22
 23a:	ac 01       	movw	r20, r24
 23c:	c3 01       	movw	r24, r6
 23e:	b2 01       	movw	r22, r4
 240:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 244:	9b 01       	movw	r18, r22
 246:	ac 01       	movw	r20, r24
 248:	c7 01       	movw	r24, r14
 24a:	b6 01       	movw	r22, r12
 24c:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 250:	2b 01       	movw	r4, r22
 252:	3c 01       	movw	r6, r24
 254:	66 27       	eor	r22, r22
 256:	77 27       	eor	r23, r23
 258:	60 1b       	sub	r22, r16
 25a:	71 0b       	sbc	r23, r17
 25c:	88 27       	eor	r24, r24
 25e:	77 fd       	sbrc	r23, 7
 260:	80 95       	com	r24
 262:	98 2f       	mov	r25, r24
 264:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 268:	9b 01       	movw	r18, r22
 26a:	ac 01       	movw	r20, r24
 26c:	ef 80       	ldd	r14, Y+7	; 0x07
 26e:	f8 84       	ldd	r15, Y+8	; 0x08
 270:	09 85       	ldd	r16, Y+9	; 0x09
 272:	1a 85       	ldd	r17, Y+10	; 0x0a
 274:	c3 01       	movw	r24, r6
 276:	b2 01       	movw	r22, r4
 278:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 27c:	6b 01       	movw	r12, r22
 27e:	7c 01       	movw	r14, r24
 280:	0b 85       	ldd	r16, Y+11	; 0x0b
 282:	1c 85       	ldd	r17, Y+12	; 0x0c
 284:	11 95       	neg	r17
 286:	01 95       	neg	r16
 288:	11 09       	sbc	r17, r1
 28a:	ed 81       	ldd	r30, Y+5	; 0x05
 28c:	fe 81       	ldd	r31, Y+6	; 0x06
 28e:	60 81       	ld	r22, Z
 290:	71 81       	ldd	r23, Z+1	; 0x01
 292:	88 27       	eor	r24, r24
 294:	77 fd       	sbrc	r23, 7
 296:	80 95       	com	r24
 298:	98 2f       	mov	r25, r24
 29a:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 29e:	2b 01       	movw	r4, r22
 2a0:	3c 01       	movw	r6, r24
 2a2:	a5 01       	movw	r20, r10
 2a4:	94 01       	movw	r18, r8
 2a6:	69 81       	ldd	r22, Y+1	; 0x01
 2a8:	7a 81       	ldd	r23, Y+2	; 0x02
 2aa:	8b 81       	ldd	r24, Y+3	; 0x03
 2ac:	9c 81       	ldd	r25, Y+4	; 0x04
 2ae:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 2b2:	9b 01       	movw	r18, r22
 2b4:	ac 01       	movw	r20, r24
 2b6:	c3 01       	movw	r24, r6
 2b8:	b2 01       	movw	r22, r4
 2ba:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 2be:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 2c2:	dc 01       	movw	r26, r24
 2c4:	cb 01       	movw	r24, r22
 2c6:	4b 85       	ldd	r20, Y+11	; 0x0b
 2c8:	5c 85       	ldd	r21, Y+12	; 0x0c
 2ca:	b8 01       	movw	r22, r16
 2cc:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 2d0:	ed 81       	ldd	r30, Y+5	; 0x05
 2d2:	fe 81       	ldd	r31, Y+6	; 0x06
 2d4:	91 83       	std	Z+1, r25	; 0x01
 2d6:	80 83       	st	Z, r24
 2d8:	2f 85       	ldd	r18, Y+15	; 0x0f
 2da:	38 89       	ldd	r19, Y+16	; 0x10
 2dc:	30 93 00 00 	sts	0x0000, r19
 2e0:	20 93 00 00 	sts	0x0000, r18
 2e4:	c7 01       	movw	r24, r14
 2e6:	b6 01       	movw	r22, r12
 2e8:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 2ec:	cb 01       	movw	r24, r22
 2ee:	60 96       	adiw	r28, 0x10	; 16
 2f0:	0f b6       	in	r0, 0x3f	; 63
 2f2:	f8 94       	cli
 2f4:	de bf       	out	0x3e, r29	; 62
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	cd bf       	out	0x3d, r28	; 61
 2fa:	df 91       	pop	r29
 2fc:	cf 91       	pop	r28
 2fe:	1f 91       	pop	r17
 300:	0f 91       	pop	r16
 302:	ff 90       	pop	r15
 304:	ef 90       	pop	r14
 306:	df 90       	pop	r13
 308:	cf 90       	pop	r12
 30a:	bf 90       	pop	r11
 30c:	af 90       	pop	r10
 30e:	9f 90       	pop	r9
 310:	8f 90       	pop	r8
 312:	7f 90       	pop	r7
 314:	6f 90       	pop	r6
 316:	5f 90       	pop	r5
 318:	4f 90       	pop	r4
 31a:	3f 90       	pop	r3
 31c:	2f 90       	pop	r2
 31e:	08 95       	ret

Disassembly of section .text.calcFF:

000003a4 <calcFF>:
 3a4:	cf 93       	push	r28
 3a6:	df 93       	push	r29
 3a8:	00 d0       	rcall	.+0      	; 0x3aa <calcFF+0x6>
 3aa:	00 d0       	rcall	.+0      	; 0x3ac <calcFF+0x8>
 3ac:	1f 92       	push	r1
 3ae:	cd b7       	in	r28, 0x3d	; 61
 3b0:	de b7       	in	r29, 0x3e	; 62
 3b2:	29 83       	std	Y+1, r18	; 0x01
 3b4:	3a 83       	std	Y+2, r19	; 0x02
 3b6:	4b 83       	std	Y+3, r20	; 0x03
 3b8:	5c 83       	std	Y+4, r21	; 0x04
 3ba:	69 81       	ldd	r22, Y+1	; 0x01
 3bc:	7a 81       	ldd	r23, Y+2	; 0x02
 3be:	2b 81       	ldd	r18, Y+3	; 0x03
 3c0:	3c 81       	ldd	r19, Y+4	; 0x04
 3c2:	81 11       	cpse	r24, r1
 3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <calcFF+0x22>
 3c6:	62 0f       	add	r22, r18
 3c8:	73 1f       	adc	r23, r19
 3ca:	00 c0       	rjmp	.+0      	; 0x3cc <calcFF+0x28>
 3cc:	81 30       	cpi	r24, 0x01	; 1
 3ce:	01 f4       	brne	.+0      	; 0x3d0 <calcFF+0x2c>
 3d0:	88 27       	eor	r24, r24
 3d2:	77 fd       	sbrc	r23, 7
 3d4:	80 95       	com	r24
 3d6:	98 2f       	mov	r25, r24
 3d8:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 3dc:	2b ed       	ldi	r18, 0xDB	; 219
 3de:	3f e0       	ldi	r19, 0x0F	; 15
 3e0:	49 e4       	ldi	r20, 0x49	; 73
 3e2:	50 e4       	ldi	r21, 0x40	; 64
 3e4:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 3e8:	20 e0       	ldi	r18, 0x00	; 0
 3ea:	30 e0       	ldi	r19, 0x00	; 0
 3ec:	44 e3       	ldi	r20, 0x34	; 52
 3ee:	53 e4       	ldi	r21, 0x43	; 67
 3f0:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 3f4:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 3f8:	20 e0       	ldi	r18, 0x00	; 0
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	4f e2       	ldi	r20, 0x2F	; 47
 3fe:	54 ec       	ldi	r21, 0xC4	; 196
 400:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 404:	0e 94 00 00 	call	0	; 0x0 <prevError.1548>
 408:	cb 01       	movw	r24, r22
 40a:	00 c0       	rjmp	.+0      	; 0x40c <calcFF+0x68>
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	0f 90       	pop	r0
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	08 95       	ret

Periph.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.encCmd  0000007c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.encInit 00000052  00000000  00000000  000000b0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.encCount 00000048  00000000  00000000  00000102  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.resetEncCount 00000014  00000000  00000000  0000014a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.setEncCount 00000036  00000000  00000000  0000015e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.getAccelRaw 00000054  00000000  00000000  00000194  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.resetAccelRef 00000012  00000000  00000000  000001e8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.getAccel 00000032  00000000  00000000  000001fa  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .bss.vref     00000002  00000000  00000000  0000022c  2**0
                  ALLOC
 12 .comment      00000012  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY

Disassembly of section .text.encCmd:

00000000 <encCmd>:
   0:	df 92       	push	r13
   2:	ef 92       	push	r14
   4:	ff 92       	push	r15
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	cf 93       	push	r28
   c:	df 93       	push	r29
   e:	d8 2e       	mov	r13, r24
  10:	79 01       	movw	r14, r18
  12:	80 91 28 00 	lds	r24, 0x0028
  16:	dd 20       	and	r13, r13
  18:	01 f0       	breq	.+0      	; 0x1a <encCmd+0x1a>
  1a:	8f 7e       	andi	r24, 0xEF	; 239
  1c:	00 c0       	rjmp	.+0      	; 0x1e <encCmd+0x1e>
  1e:	8f 7d       	andi	r24, 0xDF	; 223
  20:	80 93 28 00 	sts	0x0028, r24
  24:	80 e4       	ldi	r24, 0x40	; 64
  26:	68 9f       	mul	r22, r24
  28:	b0 01       	movw	r22, r0
  2a:	11 24       	eor	r1, r1
  2c:	88 e0       	ldi	r24, 0x08	; 8
  2e:	48 9f       	mul	r20, r24
  30:	a0 01       	movw	r20, r0
  32:	11 24       	eor	r1, r1
  34:	86 2f       	mov	r24, r22
  36:	84 2b       	or	r24, r20
  38:	90 e0       	ldi	r25, 0x00	; 0
  3a:	0e 94 00 00 	call	0	; 0x0 <encCmd>
  3e:	e7 01       	movw	r28, r14
  40:	10 e0       	ldi	r17, 0x00	; 0
  42:	9e 01       	movw	r18, r28
  44:	2e 19       	sub	r18, r14
  46:	3f 09       	sbc	r19, r15
  48:	20 17       	cp	r18, r16
  4a:	31 07       	cpc	r19, r17
  4c:	04 f4       	brge	.+0      	; 0x4e <encCmd+0x4e>
  4e:	88 81       	ld	r24, Y
  50:	90 e0       	ldi	r25, 0x00	; 0
  52:	0e 94 00 00 	call	0	; 0x0 <encCmd>
  56:	89 93       	st	Y+, r24
  58:	00 c0       	rjmp	.+0      	; 0x5a <encCmd+0x5a>
  5a:	80 91 28 00 	lds	r24, 0x0028
  5e:	dd 20       	and	r13, r13
  60:	01 f0       	breq	.+0      	; 0x62 <encCmd+0x62>
  62:	80 61       	ori	r24, 0x10	; 16
  64:	00 c0       	rjmp	.+0      	; 0x66 <encCmd+0x66>
  66:	80 62       	ori	r24, 0x20	; 32
  68:	80 93 28 00 	sts	0x0028, r24
  6c:	df 91       	pop	r29
  6e:	cf 91       	pop	r28
  70:	1f 91       	pop	r17
  72:	0f 91       	pop	r16
  74:	ff 90       	pop	r15
  76:	ef 90       	pop	r14
  78:	df 90       	pop	r13
  7a:	08 95       	ret

Disassembly of section .text.encInit:

0000007c <encInit>:
  7c:	0f 93       	push	r16
  7e:	1f 93       	push	r17
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	1f 92       	push	r1
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	18 2f       	mov	r17, r24
  8c:	00 e0       	ldi	r16, 0x00	; 0
  8e:	20 e0       	ldi	r18, 0x00	; 0
  90:	30 e0       	ldi	r19, 0x00	; 0
  92:	44 e0       	ldi	r20, 0x04	; 4
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  9a:	83 e0       	ldi	r24, 0x03	; 3
  9c:	89 83       	std	Y+1, r24	; 0x01
  9e:	01 e0       	ldi	r16, 0x01	; 1
  a0:	9e 01       	movw	r18, r28
  a2:	2f 5f       	subi	r18, 0xFF	; 255
  a4:	3f 4f       	sbci	r19, 0xFF	; 255
  a6:	41 e0       	ldi	r20, 0x01	; 1
  a8:	62 e0       	ldi	r22, 0x02	; 2
  aa:	81 2f       	mov	r24, r17
  ac:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  b0:	19 82       	std	Y+1, r1	; 0x01
  b2:	9e 01       	movw	r18, r28
  b4:	2f 5f       	subi	r18, 0xFF	; 255
  b6:	3f 4f       	sbci	r19, 0xFF	; 255
  b8:	42 e0       	ldi	r20, 0x02	; 2
  ba:	62 e0       	ldi	r22, 0x02	; 2
  bc:	81 2f       	mov	r24, r17
  be:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  c2:	0f 90       	pop	r0
  c4:	df 91       	pop	r29
  c6:	cf 91       	pop	r28
  c8:	1f 91       	pop	r17
  ca:	0f 91       	pop	r16
  cc:	08 95       	ret

Disassembly of section .text.encCount:

0000014a <encCount>:
 14a:	0f 93       	push	r16
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	00 d0       	rcall	.+0      	; 0x152 <encCount+0x8>
 152:	00 d0       	rcall	.+0      	; 0x154 <encCount+0xa>
 154:	cd b7       	in	r28, 0x3d	; 61
 156:	de b7       	in	r29, 0x3e	; 62
 158:	04 e0       	ldi	r16, 0x04	; 4
 15a:	9e 01       	movw	r18, r28
 15c:	2f 5f       	subi	r18, 0xFF	; 255
 15e:	3f 4f       	sbci	r19, 0xFF	; 255
 160:	44 e0       	ldi	r20, 0x04	; 4
 162:	61 e0       	ldi	r22, 0x01	; 1
 164:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 168:	29 81       	ldd	r18, Y+1	; 0x01
 16a:	6a 81       	ldd	r22, Y+2	; 0x02
 16c:	86 2f       	mov	r24, r22
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b0 e0       	ldi	r27, 0x00	; 0
 174:	77 27       	eor	r23, r23
 176:	66 27       	eor	r22, r22
 178:	92 2b       	or	r25, r18
 17a:	2c 81       	ldd	r18, Y+4	; 0x04
 17c:	62 2b       	or	r22, r18
 17e:	2b 81       	ldd	r18, Y+3	; 0x03
 180:	72 2b       	or	r23, r18
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	0f 90       	pop	r0
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	0f 91       	pop	r16
 190:	08 95       	ret

Disassembly of section .text.resetEncCount:

000002dc <resetEncCount>:
 2dc:	0f 93       	push	r16
 2de:	00 e0       	ldi	r16, 0x00	; 0
 2e0:	20 e0       	ldi	r18, 0x00	; 0
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	44 e0       	ldi	r20, 0x04	; 4
 2e6:	60 e0       	ldi	r22, 0x00	; 0
 2e8:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 2ec:	0f 91       	pop	r16
 2ee:	08 95       	ret

Disassembly of section .text.setEncCount:

000005cc <setEncCount>:
 5cc:	0f 93       	push	r16
 5ce:	cf 93       	push	r28
 5d0:	df 93       	push	r29
 5d2:	00 d0       	rcall	.+0      	; 0x5d4 <setEncCount+0x8>
 5d4:	00 d0       	rcall	.+0      	; 0x5d6 <setEncCount+0xa>
 5d6:	cd b7       	in	r28, 0x3d	; 61
 5d8:	de b7       	in	r29, 0x3e	; 62
 5da:	79 83       	std	Y+1, r23	; 0x01
 5dc:	6a 83       	std	Y+2, r22	; 0x02
 5de:	5b 83       	std	Y+3, r21	; 0x03
 5e0:	4c 83       	std	Y+4, r20	; 0x04
 5e2:	04 e0       	ldi	r16, 0x04	; 4
 5e4:	9e 01       	movw	r18, r28
 5e6:	2f 5f       	subi	r18, 0xFF	; 255
 5e8:	3f 4f       	sbci	r19, 0xFF	; 255
 5ea:	44 e0       	ldi	r20, 0x04	; 4
 5ec:	62 e0       	ldi	r22, 0x02	; 2
 5ee:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 5f2:	0f 90       	pop	r0
 5f4:	0f 90       	pop	r0
 5f6:	0f 90       	pop	r0
 5f8:	0f 90       	pop	r0
 5fa:	df 91       	pop	r29
 5fc:	cf 91       	pop	r28
 5fe:	0f 91       	pop	r16
 600:	08 95       	ret

Disassembly of section .text.getAccelRaw:

00000bce <getAccelRaw>:
 bce:	cf 93       	push	r28
 bd0:	df 93       	push	r29
 bd2:	20 91 28 00 	lds	r18, 0x0028
 bd6:	2e 7f       	andi	r18, 0xFE	; 254
 bd8:	20 93 28 00 	sts	0x0028, r18
 bdc:	88 0f       	add	r24, r24
 bde:	99 1f       	adc	r25, r25
 be0:	80 63       	ori	r24, 0x30	; 48
 be2:	88 0f       	add	r24, r24
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 bea:	80 e0       	ldi	r24, 0x00	; 0
 bec:	90 e0       	ldi	r25, 0x00	; 0
 bee:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 bf2:	ec 01       	movw	r28, r24
 bf4:	80 e0       	ldi	r24, 0x00	; 0
 bf6:	90 e0       	ldi	r25, 0x00	; 0
 bf8:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 bfc:	90 91 28 00 	lds	r25, 0x0028
 c00:	91 60       	ori	r25, 0x01	; 1
 c02:	90 93 28 00 	sts	0x0028, r25
 c06:	28 2f       	mov	r18, r24
 c08:	22 95       	swap	r18
 c0a:	2f 70       	andi	r18, 0x0F	; 15
 c0c:	ce 01       	movw	r24, r28
 c0e:	99 27       	eor	r25, r25
 c10:	54 e0       	ldi	r21, 0x04	; 4
 c12:	88 0f       	add	r24, r24
 c14:	99 1f       	adc	r25, r25
 c16:	5a 95       	dec	r21
 c18:	01 f4       	brne	.+0      	; 0xc1a <getAccelRaw+0x4c>
 c1a:	82 2b       	or	r24, r18
 c1c:	df 91       	pop	r29
 c1e:	cf 91       	pop	r28
 c20:	08 95       	ret

Disassembly of section .text.resetAccelRef:

000017f0 <resetAccelRef>:
    17f0:	83 e0       	ldi	r24, 0x03	; 3
    17f2:	90 e0       	ldi	r25, 0x00	; 0
    17f4:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
    17f8:	90 93 00 00 	sts	0x0000, r25
    17fc:	80 93 00 00 	sts	0x0000, r24
    1800:	08 95       	ret

Disassembly of section .text.getAccel:

00002ff2 <getAccel>:
    2ff2:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
    2ff6:	20 91 00 00 	lds	r18, 0x0000
    2ffa:	30 91 00 00 	lds	r19, 0x0000
    2ffe:	82 1b       	sub	r24, r18
    3000:	93 0b       	sbc	r25, r19
    3002:	bc 01       	movw	r22, r24
    3004:	88 27       	eor	r24, r24
    3006:	77 fd       	sbrc	r23, 7
    3008:	80 95       	com	r24
    300a:	98 2f       	mov	r25, r24
    300c:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
    3010:	2d ec       	ldi	r18, 0xCD	; 205
    3012:	3c ec       	ldi	r19, 0xCC	; 204
    3014:	4c e0       	ldi	r20, 0x0C	; 12
    3016:	50 e4       	ldi	r21, 0x40	; 64
    3018:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
    301c:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
    3020:	cb 01       	movw	r24, r22
    3022:	08 95       	ret

SPI.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initSPI 00000098  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.setSPIClkDivide 0000000e  00000000  00000000  000000cc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.spiTransceive 0000000c  00000000  00000000  000000da  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  000000e6  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initSPI:

00000000 <initSPI>:
   0:	84 b1       	in	r24, 0x04	; 4
   2:	80 6b       	ori	r24, 0xB0	; 176
   4:	84 b9       	out	0x04, r24	; 4
   6:	83 e5       	ldi	r24, 0x53	; 83
   8:	8c bd       	out	0x2c, r24	; 44
   a:	80 91 27 00 	lds	r24, 0x0027
   e:	80 62       	ori	r24, 0x20	; 32
  10:	80 93 27 00 	sts	0x0027, r24
  14:	80 91 27 00 	lds	r24, 0x0027
  18:	80 61       	ori	r24, 0x10	; 16
  1a:	80 93 27 00 	sts	0x0027, r24
  1e:	80 91 27 00 	lds	r24, 0x0027
  22:	88 60       	ori	r24, 0x08	; 8
  24:	80 93 27 00 	sts	0x0027, r24
  28:	80 91 27 00 	lds	r24, 0x0027
  2c:	84 60       	ori	r24, 0x04	; 4
  2e:	80 93 27 00 	sts	0x0027, r24
  32:	80 91 2a 00 	lds	r24, 0x002A
  36:	80 61       	ori	r24, 0x10	; 16
  38:	80 93 2a 00 	sts	0x002A, r24
  3c:	80 91 27 00 	lds	r24, 0x0027
  40:	80 64       	ori	r24, 0x40	; 64
  42:	80 93 27 00 	sts	0x0027, r24
  46:	80 91 27 00 	lds	r24, 0x0027
  4a:	81 60       	ori	r24, 0x01	; 1
  4c:	80 93 27 00 	sts	0x0027, r24
  50:	80 91 28 00 	lds	r24, 0x0028
  54:	80 62       	ori	r24, 0x20	; 32
  56:	80 93 28 00 	sts	0x0028, r24
  5a:	80 91 28 00 	lds	r24, 0x0028
  5e:	80 61       	ori	r24, 0x10	; 16
  60:	80 93 28 00 	sts	0x0028, r24
  64:	80 91 28 00 	lds	r24, 0x0028
  68:	88 60       	ori	r24, 0x08	; 8
  6a:	80 93 28 00 	sts	0x0028, r24
  6e:	80 91 28 00 	lds	r24, 0x0028
  72:	84 60       	ori	r24, 0x04	; 4
  74:	80 93 28 00 	sts	0x0028, r24
  78:	80 91 2b 00 	lds	r24, 0x002B
  7c:	80 61       	ori	r24, 0x10	; 16
  7e:	80 93 2b 00 	sts	0x002B, r24
  82:	80 91 28 00 	lds	r24, 0x0028
  86:	80 64       	ori	r24, 0x40	; 64
  88:	80 93 28 00 	sts	0x0028, r24
  8c:	80 91 28 00 	lds	r24, 0x0028
  90:	81 60       	ori	r24, 0x01	; 1
  92:	80 93 28 00 	sts	0x0028, r24
  96:	08 95       	ret

Disassembly of section .text.setSPIClkDivide:

00000098 <setSPIClkDivide>:
  98:	9c b5       	in	r25, 0x2c	; 44
  9a:	9c 7f       	andi	r25, 0xFC	; 252
  9c:	9c bd       	out	0x2c, r25	; 44
  9e:	9c b5       	in	r25, 0x2c	; 44
  a0:	98 2b       	or	r25, r24
  a2:	9c bd       	out	0x2c, r25	; 44
  a4:	08 95       	ret

Disassembly of section .text.spiTransceive:

0000013e <spiTransceive>:
 13e:	8e bd       	out	0x2e, r24	; 46
 140:	0d b4       	in	r0, 0x2d	; 45
 142:	07 fe       	sbrs	r0, 7
 144:	00 c0       	rjmp	.+0      	; 0x146 <spiTransceive+0x8>
 146:	8e b5       	in	r24, 0x2e	; 46
 148:	08 95       	ret

USARTDebug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.debugUSARTInit 00000038  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.putCharDebug 0000000e  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.getCharDebug 0000000e  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  00000088  2**0
                  CONTENTS, READONLY

Disassembly of section .text.debugUSARTInit:

00000000 <debugUSARTInit>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <debugUSARTInit+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <debugUSARTInit>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	31 09       	sbc	r19, r1
  22:	30 93 cd 00 	sts	0x00CD, r19
  26:	20 93 cc 00 	sts	0x00CC, r18
  2a:	88 e1       	ldi	r24, 0x18	; 24
  2c:	80 93 c9 00 	sts	0x00C9, r24
  30:	86 e0       	ldi	r24, 0x06	; 6
  32:	80 93 ca 00 	sts	0x00CA, r24
  36:	08 95       	ret

Disassembly of section .text.putCharDebug:

00000038 <putCharDebug>:
  38:	90 91 c8 00 	lds	r25, 0x00C8
  3c:	95 ff       	sbrs	r25, 5
  3e:	00 c0       	rjmp	.+0      	; 0x40 <putCharDebug+0x8>
  40:	80 93 ce 00 	sts	0x00CE, r24
  44:	08 95       	ret

Disassembly of section .text.getCharDebug:

0000007e <getCharDebug>:
  7e:	80 91 c8 00 	lds	r24, 0x00C8
  82:	87 ff       	sbrs	r24, 7
  84:	00 c0       	rjmp	.+0      	; 0x86 <getCharDebug+0x8>
  86:	80 91 ce 00 	lds	r24, 0x00CE
  8a:	08 95       	ret

constants.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .rodata.t1lodeg 00000002  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rodata.t2highrad 00000004  00000000  00000000  00000036  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .rodata.t2lowrad 00000004  00000000  00000000  0000003a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .rodata.t1highrad 00000004  00000000  00000000  0000003e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .rodata.t1lowrad 00000004  00000000  00000000  00000042  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rodata.t2higdeg 00000002  00000000  00000000  00000046  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rodata.t2lodeg 00000002  00000000  00000000  00000048  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rodata.t1higdeg 00000002  00000000  00000000  0000004a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .rodata.kArmHeight 00000004  00000000  00000000  0000004c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .rodata.kArmLen 00000004  00000000  00000000  00000050  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 13 .rodata.kMaxDAC 00000002  00000000  00000000  00000054  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 .rodata.Kd_L  00000004  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .rodata.Ki_L  00000004  00000000  00000000  0000005a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .rodata.Kp_L  00000004  00000000  00000000  0000005e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .rodata.Kd_H  00000004  00000000  00000000  00000062  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .rodata.Ki_H  00000004  00000000  00000000  00000066  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .rodata.Kp_H  00000004  00000000  00000000  0000006a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 .rodata.kdt   00000004  00000000  00000000  0000006e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 .rodata.kVMotor 00000002  00000000  00000000  00000072  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 22 .rodata.kPotHigh 00000001  00000000  00000000  00000074  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 23 .rodata.kPotLow 00000001  00000000  00000000  00000075  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 24 .rodata.kPotRawToVolts 00000002  00000000  00000000  00000076  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 25 .rodata.kRawOffset 00000002  00000000  00000000  00000078  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 26 .rodata.kPotRawToAngleScale 00000004  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 27 .comment      00000012  00000000  00000000  0000007e  2**0
                  CONTENTS, READONLY

drive.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setMotorVolts 0000009c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.getCurrent 00000028  00000000  00000000  000000d0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  000000f8  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setMotorVolts:

00000000 <setMotorVolts>:
   0:	ff 92       	push	r15
   2:	0f 93       	push	r16
   4:	1f 93       	push	r17
   6:	cf 93       	push	r28
   8:	df 93       	push	r29
   a:	00 d0       	rcall	.+0      	; 0xc <setMotorVolts+0xc>
   c:	00 d0       	rcall	.+0      	; 0xe <setMotorVolts+0xe>
   e:	cd b7       	in	r28, 0x3d	; 61
  10:	de b7       	in	r29, 0x3e	; 62
  12:	f8 2e       	mov	r15, r24
  14:	a0 91 00 00 	lds	r26, 0x0000
  18:	b0 91 00 00 	lds	r27, 0x0000
  1c:	9a 01       	movw	r18, r20
  1e:	ab 01       	movw	r20, r22
  20:	0e 94 00 00 	call	0	; 0x0 <setMotorVolts>
  24:	20 91 00 00 	lds	r18, 0x0000
  28:	30 91 00 00 	lds	r19, 0x0000
  2c:	44 27       	eor	r20, r20
  2e:	37 fd       	sbrc	r19, 7
  30:	40 95       	com	r20
  32:	54 2f       	mov	r21, r20
  34:	0e 94 00 00 	call	0	; 0x0 <setMotorVolts>
  38:	01 e0       	ldi	r16, 0x01	; 1
  3a:	10 e0       	ldi	r17, 0x00	; 0
  3c:	12 16       	cp	r1, r18
  3e:	13 06       	cpc	r1, r19
  40:	04 f0       	brlt	.+0      	; 0x42 <setMotorVolts+0x42>
  42:	00 e0       	ldi	r16, 0x00	; 0
  44:	10 e0       	ldi	r17, 0x00	; 0
  46:	8f 2d       	mov	r24, r15
  48:	88 0f       	add	r24, r24
  4a:	ff 24       	eor	r15, r15
  4c:	f3 94       	inc	r15
  4e:	f8 0e       	add	r15, r24
  50:	01 15       	cp	r16, r1
  52:	11 05       	cpc	r17, r1
  54:	01 f4       	brne	.+0      	; 0x56 <setMotorVolts+0x56>
  56:	60 e0       	ldi	r22, 0x00	; 0
  58:	70 e0       	ldi	r23, 0x00	; 0
  5a:	00 c0       	rjmp	.+0      	; 0x5c <setMotorVolts+0x5c>
  5c:	b9 01       	movw	r22, r18
  5e:	90 e0       	ldi	r25, 0x00	; 0
  60:	29 83       	std	Y+1, r18	; 0x01
  62:	3a 83       	std	Y+2, r19	; 0x02
  64:	4b 83       	std	Y+3, r20	; 0x03
  66:	5c 83       	std	Y+4, r21	; 0x04
  68:	0e 94 00 00 	call	0	; 0x0 <setMotorVolts>
  6c:	29 81       	ldd	r18, Y+1	; 0x01
  6e:	3a 81       	ldd	r19, Y+2	; 0x02
  70:	01 2b       	or	r16, r17
  72:	01 f4       	brne	.+0      	; 0x74 <setMotorVolts+0x74>
  74:	66 27       	eor	r22, r22
  76:	77 27       	eor	r23, r23
  78:	62 1b       	sub	r22, r18
  7a:	73 0b       	sbc	r23, r19
  7c:	00 c0       	rjmp	.+0      	; 0x7e <setMotorVolts+0x7e>
  7e:	60 e0       	ldi	r22, 0x00	; 0
  80:	70 e0       	ldi	r23, 0x00	; 0
  82:	8f 2d       	mov	r24, r15
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	0f 90       	pop	r0
  88:	0f 90       	pop	r0
  8a:	0f 90       	pop	r0
  8c:	0f 90       	pop	r0
  8e:	df 91       	pop	r29
  90:	cf 91       	pop	r28
  92:	1f 91       	pop	r17
  94:	0f 91       	pop	r16
  96:	ff 90       	pop	r15
  98:	0c 94 00 00 	jmp	0	; 0x0 <setMotorVolts>

Disassembly of section .text.getCurrent:

0000009c <getCurrent>:
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  a2:	9c 01       	movw	r18, r24
  a4:	a8 e8       	ldi	r26, 0x88	; 136
  a6:	b3 e1       	ldi	r27, 0x13	; 19
  a8:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  ac:	2f ef       	ldi	r18, 0xFF	; 255
  ae:	33 e0       	ldi	r19, 0x03	; 3
  b0:	40 e0       	ldi	r20, 0x00	; 0
  b2:	50 e0       	ldi	r21, 0x00	; 0
  b4:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  b8:	2c 58       	subi	r18, 0x8C	; 140
  ba:	3a 40       	sbci	r19, 0x0A	; 10
  bc:	41 09       	sbc	r20, r1
  be:	51 09       	sbc	r21, r1
  c0:	c9 01       	movw	r24, r18
  c2:	08 95       	ret

forwardkin.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.forward 00000144  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .comment      00000012  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY

Disassembly of section .text.forward:

00000000 <forward>:
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
   6:	7f 92       	push	r7
   8:	8f 92       	push	r8
   a:	9f 92       	push	r9
   c:	af 92       	push	r10
   e:	bf 92       	push	r11
  10:	cf 92       	push	r12
  12:	df 92       	push	r13
  14:	ef 92       	push	r14
  16:	ff 92       	push	r15
  18:	cf 93       	push	r28
  1a:	df 93       	push	r29
  1c:	00 d0       	rcall	.+0      	; 0x1e <forward+0x1e>
  1e:	00 d0       	rcall	.+0      	; 0x20 <forward+0x20>
  20:	cd b7       	in	r28, 0x3d	; 61
  22:	de b7       	in	r29, 0x3e	; 62
  24:	5b 01       	movw	r10, r22
  26:	bc 01       	movw	r22, r24
  28:	88 27       	eor	r24, r24
  2a:	77 fd       	sbrc	r23, 7
  2c:	80 95       	com	r24
  2e:	98 2f       	mov	r25, r24
  30:	0e 94 00 00 	call	0	; 0x0 <forward>
  34:	2b ed       	ldi	r18, 0xDB	; 219
  36:	3f e0       	ldi	r19, 0x0F	; 15
  38:	49 e4       	ldi	r20, 0x49	; 73
  3a:	50 e4       	ldi	r21, 0x40	; 64
  3c:	0e 94 00 00 	call	0	; 0x0 <forward>
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	30 e0       	ldi	r19, 0x00	; 0
  44:	44 e3       	ldi	r20, 0x34	; 52
  46:	53 e4       	ldi	r21, 0x43	; 67
  48:	0e 94 00 00 	call	0	; 0x0 <forward>
  4c:	6b 01       	movw	r12, r22
  4e:	7c 01       	movw	r14, r24
  50:	b5 01       	movw	r22, r10
  52:	88 27       	eor	r24, r24
  54:	77 fd       	sbrc	r23, 7
  56:	80 95       	com	r24
  58:	98 2f       	mov	r25, r24
  5a:	0e 94 00 00 	call	0	; 0x0 <forward>
  5e:	2b ed       	ldi	r18, 0xDB	; 219
  60:	3f e0       	ldi	r19, 0x0F	; 15
  62:	49 e4       	ldi	r20, 0x49	; 73
  64:	50 e4       	ldi	r21, 0x40	; 64
  66:	0e 94 00 00 	call	0	; 0x0 <forward>
  6a:	20 e0       	ldi	r18, 0x00	; 0
  6c:	30 e0       	ldi	r19, 0x00	; 0
  6e:	44 e3       	ldi	r20, 0x34	; 52
  70:	53 e4       	ldi	r21, 0x43	; 67
  72:	0e 94 00 00 	call	0	; 0x0 <forward>
  76:	9b 01       	movw	r18, r22
  78:	ac 01       	movw	r20, r24
  7a:	c7 01       	movw	r24, r14
  7c:	b6 01       	movw	r22, r12
  7e:	0e 94 00 00 	call	0	; 0x0 <forward>
  82:	2b 01       	movw	r4, r22
  84:	3c 01       	movw	r6, r24
  86:	0e 94 00 00 	call	0	; 0x0 <forward>
  8a:	4b 01       	movw	r8, r22
  8c:	5c 01       	movw	r10, r24
  8e:	c3 01       	movw	r24, r6
  90:	b2 01       	movw	r22, r4
  92:	0e 94 00 00 	call	0	; 0x0 <forward>
  96:	2b 01       	movw	r4, r22
  98:	3c 01       	movw	r6, r24
  9a:	c7 01       	movw	r24, r14
  9c:	b6 01       	movw	r22, r12
  9e:	0e 94 00 00 	call	0	; 0x0 <forward>
  a2:	69 83       	std	Y+1, r22	; 0x01
  a4:	7a 83       	std	Y+2, r23	; 0x02
  a6:	8b 83       	std	Y+3, r24	; 0x03
  a8:	9c 83       	std	Y+4, r25	; 0x04
  aa:	c7 01       	movw	r24, r14
  ac:	b6 01       	movw	r22, r12
  ae:	0e 94 00 00 	call	0	; 0x0 <forward>
  b2:	9b 01       	movw	r18, r22
  b4:	ac 01       	movw	r20, r24
  b6:	c0 90 00 00 	lds	r12, 0x0000
  ba:	d0 90 00 00 	lds	r13, 0x0000
  be:	e0 90 00 00 	lds	r14, 0x0000
  c2:	f0 90 00 00 	lds	r15, 0x0000
  c6:	c3 01       	movw	r24, r6
  c8:	b2 01       	movw	r22, r4
  ca:	0e 94 00 00 	call	0	; 0x0 <forward>
  ce:	9b 01       	movw	r18, r22
  d0:	ac 01       	movw	r20, r24
  d2:	c7 01       	movw	r24, r14
  d4:	b6 01       	movw	r22, r12
  d6:	0e 94 00 00 	call	0	; 0x0 <forward>
  da:	20 91 00 00 	lds	r18, 0x0000
  de:	30 91 00 00 	lds	r19, 0x0000
  e2:	40 91 00 00 	lds	r20, 0x0000
  e6:	50 91 00 00 	lds	r21, 0x0000
  ea:	0e 94 00 00 	call	0	; 0x0 <forward>
  ee:	0e 94 00 00 	call	0	; 0x0 <forward>
  f2:	2b 01       	movw	r4, r22
  f4:	3c 01       	movw	r6, r24
  f6:	29 81       	ldd	r18, Y+1	; 0x01
  f8:	3a 81       	ldd	r19, Y+2	; 0x02
  fa:	4b 81       	ldd	r20, Y+3	; 0x03
  fc:	5c 81       	ldd	r21, Y+4	; 0x04
  fe:	c5 01       	movw	r24, r10
 100:	b4 01       	movw	r22, r8
 102:	0e 94 00 00 	call	0	; 0x0 <forward>
 106:	9b 01       	movw	r18, r22
 108:	ac 01       	movw	r20, r24
 10a:	c7 01       	movw	r24, r14
 10c:	b6 01       	movw	r22, r12
 10e:	0e 94 00 00 	call	0	; 0x0 <forward>
 112:	0e 94 00 00 	call	0	; 0x0 <forward>
 116:	6b 01       	movw	r12, r22
 118:	7c 01       	movw	r14, r24
 11a:	b6 01       	movw	r22, r12
 11c:	c2 01       	movw	r24, r4
 11e:	0f 90       	pop	r0
 120:	0f 90       	pop	r0
 122:	0f 90       	pop	r0
 124:	0f 90       	pop	r0
 126:	df 91       	pop	r29
 128:	cf 91       	pop	r28
 12a:	ff 90       	pop	r15
 12c:	ef 90       	pop	r14
 12e:	df 90       	pop	r13
 130:	cf 90       	pop	r12
 132:	bf 90       	pop	r11
 134:	af 90       	pop	r10
 136:	9f 90       	pop	r9
 138:	8f 90       	pop	r8
 13a:	7f 90       	pop	r7
 13c:	6f 90       	pop	r6
 13e:	5f 90       	pop	r5
 140:	4f 90       	pop	r4
 142:	08 95       	ret

ik.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.inBounds 000000ca  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.getJoint 00000338  00000000  00000000  000000fe  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  00000436  2**0
                  CONTENTS, READONLY

Disassembly of section .text.inBounds:

00000000 <inBounds>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	cf 93       	push	r28
  12:	4b 01       	movw	r8, r22
  14:	5c 01       	movw	r10, r24
  16:	69 01       	movw	r12, r18
  18:	7a 01       	movw	r14, r20
  1a:	9b 01       	movw	r18, r22
  1c:	ac 01       	movw	r20, r24
  1e:	0e 94 00 00 	call	0	; 0x0 <inBounds>
  22:	81 11       	cpse	r24, r1
  24:	00 c0       	rjmp	.+0      	; 0x26 <inBounds+0x26>
  26:	a7 01       	movw	r20, r14
  28:	96 01       	movw	r18, r12
  2a:	c7 01       	movw	r24, r14
  2c:	b6 01       	movw	r22, r12
  2e:	0e 94 00 00 	call	0	; 0x0 <inBounds>
  32:	81 11       	cpse	r24, r1
  34:	00 c0       	rjmp	.+0      	; 0x36 <inBounds+0x36>
  36:	20 91 00 00 	lds	r18, 0x0000
  3a:	30 91 00 00 	lds	r19, 0x0000
  3e:	40 91 00 00 	lds	r20, 0x0000
  42:	50 91 00 00 	lds	r21, 0x0000
  46:	c5 01       	movw	r24, r10
  48:	b4 01       	movw	r22, r8
  4a:	0e 94 00 00 	call	0	; 0x0 <inBounds>
  4e:	87 fd       	sbrc	r24, 7
  50:	00 c0       	rjmp	.+0      	; 0x52 <inBounds+0x52>
  52:	20 91 00 00 	lds	r18, 0x0000
  56:	30 91 00 00 	lds	r19, 0x0000
  5a:	40 91 00 00 	lds	r20, 0x0000
  5e:	50 91 00 00 	lds	r21, 0x0000
  62:	c5 01       	movw	r24, r10
  64:	b4 01       	movw	r22, r8
  66:	0e 94 00 00 	call	0	; 0x0 <inBounds>
  6a:	18 16       	cp	r1, r24
  6c:	04 f0       	brlt	.+0      	; 0x6e <inBounds+0x6e>
  6e:	20 91 00 00 	lds	r18, 0x0000
  72:	30 91 00 00 	lds	r19, 0x0000
  76:	40 91 00 00 	lds	r20, 0x0000
  7a:	50 91 00 00 	lds	r21, 0x0000
  7e:	c7 01       	movw	r24, r14
  80:	b6 01       	movw	r22, r12
  82:	0e 94 00 00 	call	0	; 0x0 <inBounds>
  86:	87 fd       	sbrc	r24, 7
  88:	00 c0       	rjmp	.+0      	; 0x8a <inBounds+0x8a>
  8a:	c1 e0       	ldi	r28, 0x01	; 1
  8c:	20 91 00 00 	lds	r18, 0x0000
  90:	30 91 00 00 	lds	r19, 0x0000
  94:	40 91 00 00 	lds	r20, 0x0000
  98:	50 91 00 00 	lds	r21, 0x0000
  9c:	c7 01       	movw	r24, r14
  9e:	b6 01       	movw	r22, r12
  a0:	0e 94 00 00 	call	0	; 0x0 <inBounds>
  a4:	18 16       	cp	r1, r24
  a6:	04 f0       	brlt	.+0      	; 0xa8 <inBounds+0xa8>
  a8:	c0 e0       	ldi	r28, 0x00	; 0
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	8c 27       	eor	r24, r28
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <inBounds+0xb2>
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	cf 91       	pop	r28
  b8:	ff 90       	pop	r15
  ba:	ef 90       	pop	r14
  bc:	df 90       	pop	r13
  be:	cf 90       	pop	r12
  c0:	bf 90       	pop	r11
  c2:	af 90       	pop	r10
  c4:	9f 90       	pop	r9
  c6:	8f 90       	pop	r8
  c8:	08 95       	ret

Disassembly of section .text.getJoint:

000000ca <getJoint>:
  ca:	4f 92       	push	r4
  cc:	5f 92       	push	r5
  ce:	6f 92       	push	r6
  d0:	7f 92       	push	r7
  d2:	8f 92       	push	r8
  d4:	9f 92       	push	r9
  d6:	af 92       	push	r10
  d8:	bf 92       	push	r11
  da:	cf 92       	push	r12
  dc:	df 92       	push	r13
  de:	ef 92       	push	r14
  e0:	ff 92       	push	r15
  e2:	cf 93       	push	r28
  e4:	df 93       	push	r29
  e6:	cd b7       	in	r28, 0x3d	; 61
  e8:	de b7       	in	r29, 0x3e	; 62
  ea:	61 97       	sbiw	r28, 0x11	; 17
  ec:	0f b6       	in	r0, 0x3f	; 63
  ee:	f8 94       	cli
  f0:	de bf       	out	0x3e, r29	; 62
  f2:	0f be       	out	0x3f, r0	; 63
  f4:	cd bf       	out	0x3d, r28	; 61
  f6:	66 24       	eor	r6, r6
  f8:	77 24       	eor	r7, r7
  fa:	68 1a       	sub	r6, r24
  fc:	79 0a       	sbc	r7, r25
  fe:	88 27       	eor	r24, r24
 100:	77 fd       	sbrc	r23, 7
 102:	80 95       	com	r24
 104:	98 2f       	mov	r25, r24
 106:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 10a:	20 91 00 00 	lds	r18, 0x0000
 10e:	30 91 00 00 	lds	r19, 0x0000
 112:	40 91 00 00 	lds	r20, 0x0000
 116:	50 91 00 00 	lds	r21, 0x0000
 11a:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 11e:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 122:	6e 83       	std	Y+6, r22	; 0x06
 124:	7f 83       	std	Y+7, r23	; 0x07
 126:	88 87       	std	Y+8, r24	; 0x08
 128:	99 87       	std	Y+9, r25	; 0x09
 12a:	b3 01       	movw	r22, r6
 12c:	88 27       	eor	r24, r24
 12e:	77 fd       	sbrc	r23, 7
 130:	80 95       	com	r24
 132:	98 2f       	mov	r25, r24
 134:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 138:	9b 01       	movw	r18, r22
 13a:	ac 01       	movw	r20, r24
 13c:	ee 81       	ldd	r30, Y+6	; 0x06
 13e:	ff 81       	ldd	r31, Y+7	; 0x07
 140:	bf 01       	movw	r22, r30
 142:	88 27       	eor	r24, r24
 144:	77 fd       	sbrc	r23, 7
 146:	80 95       	com	r24
 148:	98 2f       	mov	r25, r24
 14a:	2e 87       	std	Y+14, r18	; 0x0e
 14c:	3f 87       	std	Y+15, r19	; 0x0f
 14e:	48 8b       	std	Y+16, r20	; 0x10
 150:	59 8b       	std	Y+17, r21	; 0x11
 152:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 156:	2e 85       	ldd	r18, Y+14	; 0x0e
 158:	3f 85       	ldd	r19, Y+15	; 0x0f
 15a:	48 89       	ldd	r20, Y+16	; 0x10
 15c:	59 89       	ldd	r21, Y+17	; 0x11
 15e:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 162:	4b 01       	movw	r8, r22
 164:	5c 01       	movw	r10, r24
 166:	c0 90 00 00 	lds	r12, 0x0000
 16a:	d0 90 00 00 	lds	r13, 0x0000
 16e:	e0 90 00 00 	lds	r14, 0x0000
 172:	f0 90 00 00 	lds	r15, 0x0000
 176:	93 01       	movw	r18, r6
 178:	d3 01       	movw	r26, r6
 17a:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 17e:	2b 01       	movw	r4, r22
 180:	3c 01       	movw	r6, r24
 182:	2e 81       	ldd	r18, Y+6	; 0x06
 184:	3f 81       	ldd	r19, Y+7	; 0x07
 186:	d9 01       	movw	r26, r18
 188:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 18c:	46 0e       	add	r4, r22
 18e:	57 1e       	adc	r5, r23
 190:	68 1e       	adc	r6, r24
 192:	79 1e       	adc	r7, r25
 194:	c3 01       	movw	r24, r6
 196:	b2 01       	movw	r22, r4
 198:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 19c:	6e 83       	std	Y+6, r22	; 0x06
 19e:	7f 83       	std	Y+7, r23	; 0x07
 1a0:	88 87       	std	Y+8, r24	; 0x08
 1a2:	99 87       	std	Y+9, r25	; 0x09
 1a4:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 1a8:	6a 87       	std	Y+10, r22	; 0x0a
 1aa:	7b 87       	std	Y+11, r23	; 0x0b
 1ac:	8c 87       	std	Y+12, r24	; 0x0c
 1ae:	9d 87       	std	Y+13, r25	; 0x0d
 1b0:	a7 01       	movw	r20, r14
 1b2:	96 01       	movw	r18, r12
 1b4:	c7 01       	movw	r24, r14
 1b6:	b6 01       	movw	r22, r12
 1b8:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 1bc:	9b 01       	movw	r18, r22
 1be:	ac 01       	movw	r20, r24
 1c0:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 1c4:	2b 01       	movw	r4, r22
 1c6:	3c 01       	movw	r6, r24
 1c8:	2e 81       	ldd	r18, Y+6	; 0x06
 1ca:	3f 81       	ldd	r19, Y+7	; 0x07
 1cc:	48 85       	ldd	r20, Y+8	; 0x08
 1ce:	59 85       	ldd	r21, Y+9	; 0x09
 1d0:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 1d4:	a3 01       	movw	r20, r6
 1d6:	92 01       	movw	r18, r4
 1d8:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 1dc:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 1e0:	6e 83       	std	Y+6, r22	; 0x06
 1e2:	7f 83       	std	Y+7, r23	; 0x07
 1e4:	88 87       	std	Y+8, r24	; 0x08
 1e6:	99 87       	std	Y+9, r25	; 0x09
 1e8:	a7 01       	movw	r20, r14
 1ea:	96 01       	movw	r18, r12
 1ec:	c7 01       	movw	r24, r14
 1ee:	b6 01       	movw	r22, r12
 1f0:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 1f4:	9b 01       	movw	r18, r22
 1f6:	ac 01       	movw	r20, r24
 1f8:	6a 85       	ldd	r22, Y+10	; 0x0a
 1fa:	7b 85       	ldd	r23, Y+11	; 0x0b
 1fc:	8c 85       	ldd	r24, Y+12	; 0x0c
 1fe:	9d 85       	ldd	r25, Y+13	; 0x0d
 200:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 204:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 208:	6a 87       	std	Y+10, r22	; 0x0a
 20a:	7b 87       	std	Y+11, r23	; 0x0b
 20c:	8c 87       	std	Y+12, r24	; 0x0c
 20e:	9d 87       	std	Y+13, r25	; 0x0d
 210:	2b ed       	ldi	r18, 0xDB	; 219
 212:	3f e0       	ldi	r19, 0x0F	; 15
 214:	49 e4       	ldi	r20, 0x49	; 73
 216:	50 e4       	ldi	r21, 0x40	; 64
 218:	6e 81       	ldd	r22, Y+6	; 0x06
 21a:	7f 81       	ldd	r23, Y+7	; 0x07
 21c:	88 85       	ldd	r24, Y+8	; 0x08
 21e:	99 85       	ldd	r25, Y+9	; 0x09
 220:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 224:	2b 01       	movw	r4, r22
 226:	3c 01       	movw	r6, r24
 228:	2a 85       	ldd	r18, Y+10	; 0x0a
 22a:	3b 85       	ldd	r19, Y+11	; 0x0b
 22c:	4c 85       	ldd	r20, Y+12	; 0x0c
 22e:	5d 85       	ldd	r21, Y+13	; 0x0d
 230:	c5 01       	movw	r24, r10
 232:	b4 01       	movw	r22, r8
 234:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 238:	2b ed       	ldi	r18, 0xDB	; 219
 23a:	3f e0       	ldi	r19, 0x0F	; 15
 23c:	49 ec       	ldi	r20, 0xC9	; 201
 23e:	5f e3       	ldi	r21, 0x3F	; 63
 240:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 244:	6b 01       	movw	r12, r22
 246:	7c 01       	movw	r14, r24
 248:	2a 85       	ldd	r18, Y+10	; 0x0a
 24a:	3b 85       	ldd	r19, Y+11	; 0x0b
 24c:	4c 85       	ldd	r20, Y+12	; 0x0c
 24e:	5d 85       	ldd	r21, Y+13	; 0x0d
 250:	c5 01       	movw	r24, r10
 252:	b4 01       	movw	r22, r8
 254:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 258:	2b ed       	ldi	r18, 0xDB	; 219
 25a:	3f e0       	ldi	r19, 0x0F	; 15
 25c:	49 ec       	ldi	r20, 0xC9	; 201
 25e:	5f e3       	ldi	r21, 0x3F	; 63
 260:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 264:	4b 01       	movw	r8, r22
 266:	5c 01       	movw	r10, r24
 268:	2b ed       	ldi	r18, 0xDB	; 219
 26a:	3f e0       	ldi	r19, 0x0F	; 15
 26c:	49 e4       	ldi	r20, 0x49	; 73
 26e:	50 e4       	ldi	r21, 0x40	; 64
 270:	c7 01       	movw	r24, r14
 272:	b6 01       	movw	r22, r12
 274:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 278:	18 16       	cp	r1, r24
 27a:	04 f4       	brge	.+0      	; 0x27c <getJoint+0x1b2>
 27c:	2b ed       	ldi	r18, 0xDB	; 219
 27e:	3f e0       	ldi	r19, 0x0F	; 15
 280:	49 ec       	ldi	r20, 0xC9	; 201
 282:	50 e4       	ldi	r21, 0x40	; 64
 284:	c7 01       	movw	r24, r14
 286:	b6 01       	movw	r22, r12
 288:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <getJoint+0x1c4>
 28e:	2b ed       	ldi	r18, 0xDB	; 219
 290:	3f e0       	ldi	r19, 0x0F	; 15
 292:	49 e4       	ldi	r20, 0x49	; 73
 294:	50 ec       	ldi	r21, 0xC0	; 192
 296:	c7 01       	movw	r24, r14
 298:	b6 01       	movw	r22, r12
 29a:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 29e:	87 ff       	sbrs	r24, 7
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <getJoint+0x1d8>
 2a2:	2b ed       	ldi	r18, 0xDB	; 219
 2a4:	3f e0       	ldi	r19, 0x0F	; 15
 2a6:	49 ec       	ldi	r20, 0xC9	; 201
 2a8:	50 e4       	ldi	r21, 0x40	; 64
 2aa:	c7 01       	movw	r24, r14
 2ac:	b6 01       	movw	r22, r12
 2ae:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 2b2:	6b 01       	movw	r12, r22
 2b4:	7c 01       	movw	r14, r24
 2b6:	2b ed       	ldi	r18, 0xDB	; 219
 2b8:	3f e0       	ldi	r19, 0x0F	; 15
 2ba:	49 e4       	ldi	r20, 0x49	; 73
 2bc:	50 e4       	ldi	r21, 0x40	; 64
 2be:	c5 01       	movw	r24, r10
 2c0:	b4 01       	movw	r22, r8
 2c2:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 2c6:	18 16       	cp	r1, r24
 2c8:	04 f4       	brge	.+0      	; 0x2ca <getJoint+0x200>
 2ca:	2b ed       	ldi	r18, 0xDB	; 219
 2cc:	3f e0       	ldi	r19, 0x0F	; 15
 2ce:	49 ec       	ldi	r20, 0xC9	; 201
 2d0:	50 e4       	ldi	r21, 0x40	; 64
 2d2:	c5 01       	movw	r24, r10
 2d4:	b4 01       	movw	r22, r8
 2d6:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 2da:	4b 01       	movw	r8, r22
 2dc:	5c 01       	movw	r10, r24
 2de:	2b ed       	ldi	r18, 0xDB	; 219
 2e0:	3f e0       	ldi	r19, 0x0F	; 15
 2e2:	49 e4       	ldi	r20, 0x49	; 73
 2e4:	50 ec       	ldi	r21, 0xC0	; 192
 2e6:	c5 01       	movw	r24, r10
 2e8:	b4 01       	movw	r22, r8
 2ea:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 2ee:	87 ff       	sbrs	r24, 7
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <getJoint+0x228>
 2f2:	2b ed       	ldi	r18, 0xDB	; 219
 2f4:	3f e0       	ldi	r19, 0x0F	; 15
 2f6:	49 ec       	ldi	r20, 0xC9	; 201
 2f8:	50 e4       	ldi	r21, 0x40	; 64
 2fa:	c5 01       	movw	r24, r10
 2fc:	b4 01       	movw	r22, r8
 2fe:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 302:	4b 01       	movw	r8, r22
 304:	5c 01       	movw	r10, r24
 306:	a3 01       	movw	r20, r6
 308:	92 01       	movw	r18, r4
 30a:	c7 01       	movw	r24, r14
 30c:	b6 01       	movw	r22, r12
 30e:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 312:	89 2b       	or	r24, r25
 314:	01 f0       	breq	.+0      	; 0x316 <getJoint+0x24c>
 316:	20 e0       	ldi	r18, 0x00	; 0
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	44 e3       	ldi	r20, 0x34	; 52
 31c:	53 e4       	ldi	r21, 0x43	; 67
 31e:	c7 01       	movw	r24, r14
 320:	b6 01       	movw	r22, r12
 322:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 326:	2b ed       	ldi	r18, 0xDB	; 219
 328:	3f e0       	ldi	r19, 0x0F	; 15
 32a:	49 e4       	ldi	r20, 0x49	; 73
 32c:	50 e4       	ldi	r21, 0x40	; 64
 32e:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 332:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 336:	7a 83       	std	Y+2, r23	; 0x02
 338:	69 83       	std	Y+1, r22	; 0x01
 33a:	20 e0       	ldi	r18, 0x00	; 0
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	44 e3       	ldi	r20, 0x34	; 52
 340:	53 e4       	ldi	r21, 0x43	; 67
 342:	c3 01       	movw	r24, r6
 344:	b2 01       	movw	r22, r4
 346:	00 c0       	rjmp	.+0      	; 0x348 <getJoint+0x27e>
 348:	2e 81       	ldd	r18, Y+6	; 0x06
 34a:	3f 81       	ldd	r19, Y+7	; 0x07
 34c:	48 85       	ldd	r20, Y+8	; 0x08
 34e:	59 85       	ldd	r21, Y+9	; 0x09
 350:	6b ed       	ldi	r22, 0xDB	; 219
 352:	7f e0       	ldi	r23, 0x0F	; 15
 354:	89 e4       	ldi	r24, 0x49	; 73
 356:	90 e4       	ldi	r25, 0x40	; 64
 358:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 35c:	6b 01       	movw	r12, r22
 35e:	7c 01       	movw	r14, r24
 360:	9b 01       	movw	r18, r22
 362:	ac 01       	movw	r20, r24
 364:	c5 01       	movw	r24, r10
 366:	b4 01       	movw	r22, r8
 368:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 36c:	89 2b       	or	r24, r25
 36e:	01 f0       	breq	.+0      	; 0x370 <getJoint+0x2a6>
 370:	20 e0       	ldi	r18, 0x00	; 0
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	44 e3       	ldi	r20, 0x34	; 52
 376:	53 e4       	ldi	r21, 0x43	; 67
 378:	c5 01       	movw	r24, r10
 37a:	b4 01       	movw	r22, r8
 37c:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 380:	2b ed       	ldi	r18, 0xDB	; 219
 382:	3f e0       	ldi	r19, 0x0F	; 15
 384:	49 e4       	ldi	r20, 0x49	; 73
 386:	50 e4       	ldi	r21, 0x40	; 64
 388:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 38c:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 390:	7a 83       	std	Y+2, r23	; 0x02
 392:	69 83       	std	Y+1, r22	; 0x01
 394:	20 e0       	ldi	r18, 0x00	; 0
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	44 e3       	ldi	r20, 0x34	; 52
 39a:	53 e4       	ldi	r21, 0x43	; 67
 39c:	c7 01       	movw	r24, r14
 39e:	b6 01       	movw	r22, r12
 3a0:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 3a4:	2b ed       	ldi	r18, 0xDB	; 219
 3a6:	3f e0       	ldi	r19, 0x0F	; 15
 3a8:	49 e4       	ldi	r20, 0x49	; 73
 3aa:	50 e4       	ldi	r21, 0x40	; 64
 3ac:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 3b0:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 3b4:	7c 83       	std	Y+4, r23	; 0x04
 3b6:	6b 83       	std	Y+3, r22	; 0x03
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	8d 83       	std	Y+5, r24	; 0x05
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <getJoint+0x2f4>
 3be:	1a 82       	std	Y+2, r1	; 0x02
 3c0:	19 82       	std	Y+1, r1	; 0x01
 3c2:	1c 82       	std	Y+4, r1	; 0x04
 3c4:	1b 82       	std	Y+3, r1	; 0x03
 3c6:	1d 82       	std	Y+5, r1	; 0x05
 3c8:	29 81       	ldd	r18, Y+1	; 0x01
 3ca:	3a 81       	ldd	r19, Y+2	; 0x02
 3cc:	4b 81       	ldd	r20, Y+3	; 0x03
 3ce:	5c 81       	ldd	r21, Y+4	; 0x04
 3d0:	6d 81       	ldd	r22, Y+5	; 0x05
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	61 96       	adiw	r28, 0x11	; 17
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	f8 94       	cli
 3de:	de bf       	out	0x3e, r29	; 62
 3e0:	0f be       	out	0x3f, r0	; 63
 3e2:	cd bf       	out	0x3d, r28	; 61
 3e4:	df 91       	pop	r29
 3e6:	cf 91       	pop	r28
 3e8:	ff 90       	pop	r15
 3ea:	ef 90       	pop	r14
 3ec:	df 90       	pop	r13
 3ee:	cf 90       	pop	r12
 3f0:	bf 90       	pop	r11
 3f2:	af 90       	pop	r10
 3f4:	9f 90       	pop	r9
 3f6:	8f 90       	pop	r8
 3f8:	7f 90       	pop	r7
 3fa:	6f 90       	pop	r6
 3fc:	5f 90       	pop	r5
 3fe:	4f 90       	pop	r4
 400:	08 95       	ret

motors.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.writeMotors 0000006c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.initMotors 000000ae  00000000  00000000  000000a0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.getPos  0000001a  00000000  00000000  0000014e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.motorISR 000000f8  00000000  00000000  00000168  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.gotoXY  0000004c  00000000  00000000  00000260  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.gotoAngles 0000001c  00000000  00000000  000002ac  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .data.reset   00000001  00000000  00000000  000002c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss.enable   00000001  00000000  00000000  000002c9  2**0
                  ALLOC
 11 .bss.curjoint 00000005  00000000  00000000  000002c9  2**0
                  ALLOC
 12 .data.curxy   00000004  00000000  00000000  000002c9  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss.goaljoint 00000005  00000000  00000000  000002cd  2**0
                  ALLOC
 14 .bss.isrdone  00000001  00000000  00000000  000002cd  2**0
                  ALLOC
 15 .comment      00000012  00000000  00000000  000002cd  2**0
                  CONTENTS, READONLY

Disassembly of section .text.writeMotors:

00000000 <writeMotors>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	6b 01       	movw	r12, r22
  12:	c0 91 00 00 	lds	r28, 0x0000
  16:	d0 91 00 00 	lds	r29, 0x0000
  1a:	00 27       	eor	r16, r16
  1c:	11 27       	eor	r17, r17
  1e:	0c 1b       	sub	r16, r28
  20:	1d 0b       	sbc	r17, r29
  22:	ae 01       	movw	r20, r28
  24:	b8 01       	movw	r22, r16
  26:	0e 94 00 00 	call	0	; 0x0 <writeMotors>
  2a:	7c 01       	movw	r14, r24
  2c:	ae 01       	movw	r20, r28
  2e:	b8 01       	movw	r22, r16
  30:	c6 01       	movw	r24, r12
  32:	0e 94 00 00 	call	0	; 0x0 <writeMotors>
  36:	91 95       	neg	r25
  38:	81 95       	neg	r24
  3a:	91 09       	sbc	r25, r1
  3c:	ac 01       	movw	r20, r24
  3e:	66 27       	eor	r22, r22
  40:	57 fd       	sbrc	r21, 7
  42:	60 95       	com	r22
  44:	76 2f       	mov	r23, r22
  46:	80 e0       	ldi	r24, 0x00	; 0
  48:	0e 94 00 00 	call	0	; 0x0 <writeMotors>
  4c:	a7 01       	movw	r20, r14
  4e:	66 27       	eor	r22, r22
  50:	57 fd       	sbrc	r21, 7
  52:	60 95       	com	r22
  54:	76 2f       	mov	r23, r22
  56:	81 e0       	ldi	r24, 0x01	; 1
  58:	df 91       	pop	r29
  5a:	cf 91       	pop	r28
  5c:	1f 91       	pop	r17
  5e:	0f 91       	pop	r16
  60:	ff 90       	pop	r15
  62:	ef 90       	pop	r14
  64:	df 90       	pop	r13
  66:	cf 90       	pop	r12
  68:	0c 94 00 00 	jmp	0	; 0x0 <writeMotors>

Disassembly of section .text.initMotors:

0000006c <initMotors>:
  6c:	cf 92       	push	r12
  6e:	df 92       	push	r13
  70:	ef 92       	push	r14
  72:	ff 92       	push	r15
  74:	0f 93       	push	r16
  76:	1f 93       	push	r17
  78:	c0 90 00 00 	lds	r12, 0x0000
  7c:	d0 90 00 00 	lds	r13, 0x0000
  80:	e0 90 00 00 	lds	r14, 0x0000
  84:	f0 90 00 00 	lds	r15, 0x0000
  88:	00 91 00 00 	lds	r16, 0x0000
  8c:	10 91 00 00 	lds	r17, 0x0000
  90:	20 91 00 00 	lds	r18, 0x0000
  94:	30 91 00 00 	lds	r19, 0x0000
  98:	40 91 00 00 	lds	r20, 0x0000
  9c:	50 91 00 00 	lds	r21, 0x0000
  a0:	60 91 00 00 	lds	r22, 0x0000
  a4:	70 91 00 00 	lds	r23, 0x0000
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	0e 94 00 00 	call	0	; 0x0 <enable>
  ae:	c0 90 00 00 	lds	r12, 0x0000
  b2:	d0 90 00 00 	lds	r13, 0x0000
  b6:	e0 90 00 00 	lds	r14, 0x0000
  ba:	f0 90 00 00 	lds	r15, 0x0000
  be:	00 91 00 00 	lds	r16, 0x0000
  c2:	10 91 00 00 	lds	r17, 0x0000
  c6:	20 91 00 00 	lds	r18, 0x0000
  ca:	30 91 00 00 	lds	r19, 0x0000
  ce:	40 91 00 00 	lds	r20, 0x0000
  d2:	50 91 00 00 	lds	r21, 0x0000
  d6:	60 91 00 00 	lds	r22, 0x0000
  da:	70 91 00 00 	lds	r23, 0x0000
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	0e 94 00 00 	call	0	; 0x0 <enable>
  e4:	20 e1       	ldi	r18, 0x10	; 16
  e6:	37 e2       	ldi	r19, 0x27	; 39
  e8:	40 e0       	ldi	r20, 0x00	; 0
  ea:	50 e0       	ldi	r21, 0x00	; 0
  ec:	62 e0       	ldi	r22, 0x02	; 2
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 00 00 	call	0	; 0x0 <enable>
  f8:	60 e0       	ldi	r22, 0x00	; 0
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	0e 94 00 00 	call	0	; 0x0 <enable>
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	70 e0       	ldi	r23, 0x00	; 0
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	1f 91       	pop	r17
 10c:	0f 91       	pop	r16
 10e:	ff 90       	pop	r15
 110:	ef 90       	pop	r14
 112:	df 90       	pop	r13
 114:	cf 90       	pop	r12
 116:	0c 94 00 00 	jmp	0	; 0x0 <enable>

Disassembly of section .text.getPos:

00000186 <getPos>:
 186:	88 23       	and	r24, r24
 188:	01 f0       	breq	.+0      	; 0x18a <getPos+0x4>
 18a:	81 30       	cpi	r24, 0x01	; 1
 18c:	01 f0       	breq	.+0      	; 0x18e <getPos+0x8>
 18e:	08 95       	ret
 190:	80 91 00 00 	lds	r24, 0x0000
 194:	00 c0       	rjmp	.+0      	; 0x196 <getPos+0x10>
 196:	80 91 00 00 	lds	r24, 0x0000
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0c 94 00 00 	jmp	0	; 0x0 <enable>

Disassembly of section .text.motorISR:

00000326 <motorISR>:
 326:	0f 93       	push	r16
 328:	1f 93       	push	r17
 32a:	cf 93       	push	r28
 32c:	df 93       	push	r29
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	80 93 00 00 	sts	0x0000, r24
 334:	80 91 00 00 	lds	r24, 0x0000
 338:	81 11       	cpse	r24, r1
 33a:	00 c0       	rjmp	.+0      	; 0x33c <motorISR+0x16>
 33c:	60 e0       	ldi	r22, 0x00	; 0
 33e:	70 e0       	ldi	r23, 0x00	; 0
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	df 91       	pop	r29
 346:	cf 91       	pop	r28
 348:	1f 91       	pop	r17
 34a:	0f 91       	pop	r16
 34c:	0c 94 00 00 	jmp	0	; 0x0 <enable>
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	0e 94 00 00 	call	0	; 0x0 <enable>
 356:	90 93 00 00 	sts	0x0000, r25
 35a:	80 93 00 00 	sts	0x0000, r24
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	0e 94 00 00 	call	0	; 0x0 <enable>
 364:	90 93 00 00 	sts	0x0000, r25
 368:	80 93 00 00 	sts	0x0000, r24
 36c:	20 91 00 00 	lds	r18, 0x0000
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	40 91 00 00 	lds	r20, 0x0000
 376:	50 91 00 00 	lds	r21, 0x0000
 37a:	60 91 00 00 	lds	r22, 0x0000
 37e:	70 91 00 00 	lds	r23, 0x0000
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	0e 94 00 00 	call	0	; 0x0 <enable>
 388:	ec 01       	movw	r28, r24
 38a:	20 91 00 00 	lds	r18, 0x0000
 38e:	30 91 00 00 	lds	r19, 0x0000
 392:	40 91 00 00 	lds	r20, 0x0000
 396:	50 91 00 00 	lds	r21, 0x0000
 39a:	60 91 00 00 	lds	r22, 0x0000
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	0e 94 00 00 	call	0	; 0x0 <enable>
 3a4:	c8 0f       	add	r28, r24
 3a6:	d9 1f       	adc	r29, r25
 3a8:	20 91 00 00 	lds	r18, 0x0000
 3ac:	30 e0       	ldi	r19, 0x00	; 0
 3ae:	40 91 00 00 	lds	r20, 0x0000
 3b2:	50 91 00 00 	lds	r21, 0x0000
 3b6:	60 91 00 00 	lds	r22, 0x0000
 3ba:	70 91 00 00 	lds	r23, 0x0000
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	0e 94 00 00 	call	0	; 0x0 <enable>
 3c4:	8c 01       	movw	r16, r24
 3c6:	20 91 00 00 	lds	r18, 0x0000
 3ca:	30 91 00 00 	lds	r19, 0x0000
 3ce:	40 91 00 00 	lds	r20, 0x0000
 3d2:	50 91 00 00 	lds	r21, 0x0000
 3d6:	60 91 00 00 	lds	r22, 0x0000
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	0e 94 00 00 	call	0	; 0x0 <enable>
 3e0:	b8 01       	movw	r22, r16
 3e2:	68 0f       	add	r22, r24
 3e4:	79 1f       	adc	r23, r25
 3e6:	ce 01       	movw	r24, r28
 3e8:	0e 94 00 00 	call	0	; 0x0 <enable>
 3ec:	60 91 00 00 	lds	r22, 0x0000
 3f0:	70 91 00 00 	lds	r23, 0x0000
 3f4:	80 91 00 00 	lds	r24, 0x0000
 3f8:	90 91 00 00 	lds	r25, 0x0000
 3fc:	0e 94 00 00 	call	0	; 0x0 <enable>
 400:	60 93 00 00 	sts	0x0000, r22
 404:	70 93 00 00 	sts	0x0000, r23
 408:	80 93 00 00 	sts	0x0000, r24
 40c:	90 93 00 00 	sts	0x0000, r25
 410:	10 92 00 00 	sts	0x0000, r1
 414:	df 91       	pop	r29
 416:	cf 91       	pop	r28
 418:	1f 91       	pop	r17
 41a:	0f 91       	pop	r16
 41c:	08 95       	ret

Disassembly of section .text.gotoXY:

00000744 <gotoXY>:
 744:	cf 93       	push	r28
 746:	df 93       	push	r29
 748:	00 d0       	rcall	.+0      	; 0x74a <gotoXY+0x6>
 74a:	00 d0       	rcall	.+0      	; 0x74c <gotoXY+0x8>
 74c:	1f 92       	push	r1
 74e:	cd b7       	in	r28, 0x3d	; 61
 750:	de b7       	in	r29, 0x3e	; 62
 752:	0e 94 00 00 	call	0	; 0x0 <enable>
 756:	29 83       	std	Y+1, r18	; 0x01
 758:	3a 83       	std	Y+2, r19	; 0x02
 75a:	4b 83       	std	Y+3, r20	; 0x03
 75c:	5c 83       	std	Y+4, r21	; 0x04
 75e:	6d 83       	std	Y+5, r22	; 0x05
 760:	81 e0       	ldi	r24, 0x01	; 1
 762:	80 93 00 00 	sts	0x0000, r24
 766:	80 93 00 00 	sts	0x0000, r24
 76a:	66 23       	and	r22, r22
 76c:	01 f0       	breq	.+0      	; 0x76e <gotoXY+0x2a>
 76e:	85 e0       	ldi	r24, 0x05	; 5
 770:	fe 01       	movw	r30, r28
 772:	31 96       	adiw	r30, 0x01	; 1
 774:	a0 e0       	ldi	r26, 0x00	; 0
 776:	b0 e0       	ldi	r27, 0x00	; 0
 778:	01 90       	ld	r0, Z+
 77a:	0d 92       	st	X+, r0
 77c:	8a 95       	dec	r24
 77e:	01 f4       	brne	.+0      	; 0x780 <gotoXY+0x3c>
 780:	0f 90       	pop	r0
 782:	0f 90       	pop	r0
 784:	0f 90       	pop	r0
 786:	0f 90       	pop	r0
 788:	0f 90       	pop	r0
 78a:	df 91       	pop	r29
 78c:	cf 91       	pop	r28
 78e:	08 95       	ret

Disassembly of section .text.gotoAngles:

00000ed4 <gotoAngles>:
 ed4:	90 93 00 00 	sts	0x0000, r25
 ed8:	80 93 00 00 	sts	0x0000, r24
 edc:	70 93 00 00 	sts	0x0000, r23
 ee0:	60 93 00 00 	sts	0x0000, r22
 ee4:	81 e0       	ldi	r24, 0x01	; 1
 ee6:	80 93 00 00 	sts	0x0000, r24
 eea:	80 93 00 00 	sts	0x0000, r24
 eee:	08 95       	ret

ports.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setPinsDir 000000c0  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.getPinsVal 00000062  00000000  00000000  000000f4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.setPinsVal 000000c0  00000000  00000000  00000156  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  00000216  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setPinsDir:

00000000 <setPinsDir>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	cd b7       	in	r28, 0x3d	; 61
   e:	de b7       	in	r29, 0x3e	; 62
  10:	09 85       	ldd	r16, Y+9	; 0x09
  12:	8a 85       	ldd	r24, Y+10	; 0x0a
  14:	9b 85       	ldd	r25, Y+11	; 0x0b
  16:	fe 01       	movw	r30, r28
  18:	3d 96       	adiw	r30, 0x0d	; 13
  1a:	20 e0       	ldi	r18, 0x00	; 0
  1c:	30 e0       	ldi	r19, 0x00	; 0
  1e:	10 e0       	ldi	r17, 0x00	; 0
  20:	4c 85       	ldd	r20, Y+12	; 0x0c
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	61 e0       	ldi	r22, 0x01	; 1
  26:	70 e0       	ldi	r23, 0x00	; 0
  28:	24 17       	cp	r18, r20
  2a:	35 07       	cpc	r19, r21
  2c:	04 f4       	brge	.+0      	; 0x2e <setPinsDir+0x2e>
  2e:	a0 81       	ld	r26, Z
  30:	32 96       	adiw	r30, 0x02	; 2
  32:	7b 01       	movw	r14, r22
  34:	00 c0       	rjmp	.+0      	; 0x36 <setPinsDir+0x36>
  36:	ee 0c       	add	r14, r14
  38:	ff 1c       	adc	r15, r15
  3a:	aa 95       	dec	r26
  3c:	02 f4       	brpl	.+0      	; 0x3e <setPinsDir+0x3e>
  3e:	1e 29       	or	r17, r14
  40:	2f 5f       	subi	r18, 0xFF	; 255
  42:	3f 4f       	sbci	r19, 0xFF	; 255
  44:	00 c0       	rjmp	.+0      	; 0x46 <setPinsDir+0x46>
  46:	02 34       	cpi	r16, 0x42	; 66
  48:	01 f0       	breq	.+0      	; 0x4a <setPinsDir+0x4a>
  4a:	00 f4       	brcc	.+0      	; 0x4c <setPinsDir+0x4c>
  4c:	01 34       	cpi	r16, 0x41	; 65
  4e:	01 f0       	breq	.+0      	; 0x50 <setPinsDir+0x50>
  50:	00 c0       	rjmp	.+0      	; 0x52 <setPinsDir+0x52>
  52:	03 34       	cpi	r16, 0x43	; 67
  54:	01 f0       	breq	.+0      	; 0x56 <setPinsDir+0x56>
  56:	04 34       	cpi	r16, 0x44	; 68
  58:	01 f0       	breq	.+0      	; 0x5a <setPinsDir+0x5a>
  5a:	00 c0       	rjmp	.+0      	; 0x5c <setPinsDir+0x5c>
  5c:	89 2b       	or	r24, r25
  5e:	01 f0       	breq	.+0      	; 0x60 <setPinsDir+0x60>
  60:	81 b1       	in	r24, 0x01	; 1
  62:	10 95       	com	r17
  64:	18 23       	and	r17, r24
  66:	11 b9       	out	0x01, r17	; 1
  68:	00 c0       	rjmp	.+0      	; 0x6a <setPinsDir+0x6a>
  6a:	81 b1       	in	r24, 0x01	; 1
  6c:	81 2b       	or	r24, r17
  6e:	81 b9       	out	0x01, r24	; 1
  70:	00 c0       	rjmp	.+0      	; 0x72 <setPinsDir+0x72>
  72:	89 2b       	or	r24, r25
  74:	01 f0       	breq	.+0      	; 0x76 <setPinsDir+0x76>
  76:	84 b1       	in	r24, 0x04	; 4
  78:	10 95       	com	r17
  7a:	18 23       	and	r17, r24
  7c:	14 b9       	out	0x04, r17	; 4
  7e:	00 c0       	rjmp	.+0      	; 0x80 <setPinsDir+0x80>
  80:	84 b1       	in	r24, 0x04	; 4
  82:	81 2b       	or	r24, r17
  84:	84 b9       	out	0x04, r24	; 4
  86:	00 c0       	rjmp	.+0      	; 0x88 <setPinsDir+0x88>
  88:	89 2b       	or	r24, r25
  8a:	01 f0       	breq	.+0      	; 0x8c <setPinsDir+0x8c>
  8c:	87 b1       	in	r24, 0x07	; 7
  8e:	10 95       	com	r17
  90:	18 23       	and	r17, r24
  92:	17 b9       	out	0x07, r17	; 7
  94:	00 c0       	rjmp	.+0      	; 0x96 <setPinsDir+0x96>
  96:	87 b1       	in	r24, 0x07	; 7
  98:	81 2b       	or	r24, r17
  9a:	87 b9       	out	0x07, r24	; 7
  9c:	00 c0       	rjmp	.+0      	; 0x9e <setPinsDir+0x9e>
  9e:	89 2b       	or	r24, r25
  a0:	01 f0       	breq	.+0      	; 0xa2 <setPinsDir+0xa2>
  a2:	8a b1       	in	r24, 0x0a	; 10
  a4:	10 95       	com	r17
  a6:	18 23       	and	r17, r24
  a8:	1a b9       	out	0x0a, r17	; 10
  aa:	00 c0       	rjmp	.+0      	; 0xac <setPinsDir+0xac>
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	81 2b       	or	r24, r17
  b0:	8a b9       	out	0x0a, r24	; 10
  b2:	df 91       	pop	r29
  b4:	cf 91       	pop	r28
  b6:	1f 91       	pop	r17
  b8:	0f 91       	pop	r16
  ba:	ff 90       	pop	r15
  bc:	ef 90       	pop	r14
  be:	08 95       	ret

Disassembly of section .text.getPinsVal:

000000c0 <getPinsVal>:
  c0:	0f 93       	push	r16
  c2:	1f 93       	push	r17
  c4:	cf 93       	push	r28
  c6:	df 93       	push	r29
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62
  cc:	bf 81       	ldd	r27, Y+7	; 0x07
  ce:	fe 01       	movw	r30, r28
  d0:	39 96       	adiw	r30, 0x09	; 9
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	a0 e0       	ldi	r26, 0x00	; 0
  d8:	28 85       	ldd	r18, Y+8	; 0x08
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	41 e0       	ldi	r20, 0x01	; 1
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	82 17       	cp	r24, r18
  e2:	93 07       	cpc	r25, r19
  e4:	04 f4       	brge	.+0      	; 0xe6 <getPinsVal+0x26>
  e6:	60 81       	ld	r22, Z
  e8:	32 96       	adiw	r30, 0x02	; 2
  ea:	8a 01       	movw	r16, r20
  ec:	00 c0       	rjmp	.+0      	; 0xee <getPinsVal+0x2e>
  ee:	00 0f       	add	r16, r16
  f0:	11 1f       	adc	r17, r17
  f2:	6a 95       	dec	r22
  f4:	02 f4       	brpl	.+0      	; 0xf6 <getPinsVal+0x36>
  f6:	a0 2b       	or	r26, r16
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	00 c0       	rjmp	.+0      	; 0xfc <getPinsVal+0x3c>
  fc:	b2 34       	cpi	r27, 0x42	; 66
  fe:	01 f0       	breq	.+0      	; 0x100 <getPinsVal+0x40>
 100:	b3 34       	cpi	r27, 0x43	; 67
 102:	01 f0       	breq	.+0      	; 0x104 <getPinsVal+0x44>
 104:	b1 34       	cpi	r27, 0x41	; 65
 106:	01 f4       	brne	.+0      	; 0x108 <getPinsVal+0x48>
 108:	80 b1       	in	r24, 0x00	; 0
 10a:	00 c0       	rjmp	.+0      	; 0x10c <getPinsVal+0x4c>
 10c:	83 b1       	in	r24, 0x03	; 3
 10e:	00 c0       	rjmp	.+0      	; 0x110 <getPinsVal+0x50>
 110:	86 b1       	in	r24, 0x06	; 6
 112:	8a 23       	and	r24, r26
 114:	00 c0       	rjmp	.+0      	; 0x116 <getPinsVal+0x56>
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	df 91       	pop	r29
 11a:	cf 91       	pop	r28
 11c:	1f 91       	pop	r17
 11e:	0f 91       	pop	r16
 120:	08 95       	ret

Disassembly of section .text.setPinsVal:

000001e2 <setPinsVal>:
 1e2:	ef 92       	push	r14
 1e4:	ff 92       	push	r15
 1e6:	0f 93       	push	r16
 1e8:	1f 93       	push	r17
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	09 85       	ldd	r16, Y+9	; 0x09
 1f4:	8a 85       	ldd	r24, Y+10	; 0x0a
 1f6:	9b 85       	ldd	r25, Y+11	; 0x0b
 1f8:	fe 01       	movw	r30, r28
 1fa:	3d 96       	adiw	r30, 0x0d	; 13
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	10 e0       	ldi	r17, 0x00	; 0
 202:	4c 85       	ldd	r20, Y+12	; 0x0c
 204:	50 e0       	ldi	r21, 0x00	; 0
 206:	61 e0       	ldi	r22, 0x01	; 1
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	24 17       	cp	r18, r20
 20c:	35 07       	cpc	r19, r21
 20e:	04 f4       	brge	.+0      	; 0x210 <setPinsVal+0x2e>
 210:	a0 81       	ld	r26, Z
 212:	32 96       	adiw	r30, 0x02	; 2
 214:	7b 01       	movw	r14, r22
 216:	00 c0       	rjmp	.+0      	; 0x218 <setPinsVal+0x36>
 218:	ee 0c       	add	r14, r14
 21a:	ff 1c       	adc	r15, r15
 21c:	aa 95       	dec	r26
 21e:	02 f4       	brpl	.+0      	; 0x220 <setPinsVal+0x3e>
 220:	1e 29       	or	r17, r14
 222:	2f 5f       	subi	r18, 0xFF	; 255
 224:	3f 4f       	sbci	r19, 0xFF	; 255
 226:	00 c0       	rjmp	.+0      	; 0x228 <setPinsVal+0x46>
 228:	02 34       	cpi	r16, 0x42	; 66
 22a:	01 f0       	breq	.+0      	; 0x22c <setPinsVal+0x4a>
 22c:	00 f4       	brcc	.+0      	; 0x22e <setPinsVal+0x4c>
 22e:	01 34       	cpi	r16, 0x41	; 65
 230:	01 f0       	breq	.+0      	; 0x232 <setPinsVal+0x50>
 232:	00 c0       	rjmp	.+0      	; 0x234 <setPinsVal+0x52>
 234:	03 34       	cpi	r16, 0x43	; 67
 236:	01 f0       	breq	.+0      	; 0x238 <setPinsVal+0x56>
 238:	04 34       	cpi	r16, 0x44	; 68
 23a:	01 f0       	breq	.+0      	; 0x23c <setPinsVal+0x5a>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <setPinsVal+0x5c>
 23e:	89 2b       	or	r24, r25
 240:	01 f0       	breq	.+0      	; 0x242 <setPinsVal+0x60>
 242:	82 b1       	in	r24, 0x02	; 2
 244:	10 95       	com	r17
 246:	18 23       	and	r17, r24
 248:	12 b9       	out	0x02, r17	; 2
 24a:	00 c0       	rjmp	.+0      	; 0x24c <setPinsVal+0x6a>
 24c:	82 b1       	in	r24, 0x02	; 2
 24e:	81 2b       	or	r24, r17
 250:	82 b9       	out	0x02, r24	; 2
 252:	00 c0       	rjmp	.+0      	; 0x254 <setPinsVal+0x72>
 254:	89 2b       	or	r24, r25
 256:	01 f0       	breq	.+0      	; 0x258 <setPinsVal+0x76>
 258:	85 b1       	in	r24, 0x05	; 5
 25a:	10 95       	com	r17
 25c:	18 23       	and	r17, r24
 25e:	15 b9       	out	0x05, r17	; 5
 260:	00 c0       	rjmp	.+0      	; 0x262 <setPinsVal+0x80>
 262:	85 b1       	in	r24, 0x05	; 5
 264:	81 2b       	or	r24, r17
 266:	85 b9       	out	0x05, r24	; 5
 268:	00 c0       	rjmp	.+0      	; 0x26a <setPinsVal+0x88>
 26a:	89 2b       	or	r24, r25
 26c:	01 f0       	breq	.+0      	; 0x26e <setPinsVal+0x8c>
 26e:	88 b1       	in	r24, 0x08	; 8
 270:	10 95       	com	r17
 272:	18 23       	and	r17, r24
 274:	18 b9       	out	0x08, r17	; 8
 276:	00 c0       	rjmp	.+0      	; 0x278 <setPinsVal+0x96>
 278:	88 b1       	in	r24, 0x08	; 8
 27a:	81 2b       	or	r24, r17
 27c:	88 b9       	out	0x08, r24	; 8
 27e:	00 c0       	rjmp	.+0      	; 0x280 <setPinsVal+0x9e>
 280:	89 2b       	or	r24, r25
 282:	01 f0       	breq	.+0      	; 0x284 <setPinsVal+0xa2>
 284:	8b b1       	in	r24, 0x0b	; 11
 286:	10 95       	com	r17
 288:	18 23       	and	r17, r24
 28a:	1b b9       	out	0x0b, r17	; 11
 28c:	00 c0       	rjmp	.+0      	; 0x28e <setPinsVal+0xac>
 28e:	8b b1       	in	r24, 0x0b	; 11
 290:	81 2b       	or	r24, r17
 292:	8b b9       	out	0x0b, r24	; 11
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	1f 91       	pop	r17
 29a:	0f 91       	pop	r16
 29c:	ff 90       	pop	r15
 29e:	ef 90       	pop	r14
 2a0:	08 95       	ret

pot.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.potAngle 00000038  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.potVolts 0000001e  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  0000008a  2**0
                  CONTENTS, READONLY

Disassembly of section .text.potAngle:

00000000 <potAngle>:
   0:	0e 94 00 00 	call	0	; 0x0 <potAngle>
   4:	60 91 00 00 	lds	r22, 0x0000
   8:	70 91 00 00 	lds	r23, 0x0000
   c:	68 0f       	add	r22, r24
   e:	79 1f       	adc	r23, r25
  10:	88 27       	eor	r24, r24
  12:	77 fd       	sbrc	r23, 7
  14:	80 95       	com	r24
  16:	98 2f       	mov	r25, r24
  18:	0e 94 00 00 	call	0	; 0x0 <potAngle>
  1c:	20 91 00 00 	lds	r18, 0x0000
  20:	30 91 00 00 	lds	r19, 0x0000
  24:	40 91 00 00 	lds	r20, 0x0000
  28:	50 91 00 00 	lds	r21, 0x0000
  2c:	0e 94 00 00 	call	0	; 0x0 <potAngle>
  30:	0e 94 00 00 	call	0	; 0x0 <potAngle>
  34:	cb 01       	movw	r24, r22
  36:	08 95       	ret

Disassembly of section .text.potVolts:

00000038 <potVolts>:
  38:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  3c:	20 91 00 00 	lds	r18, 0x0000
  40:	30 91 00 00 	lds	r19, 0x0000
  44:	ac 01       	movw	r20, r24
  46:	42 9f       	mul	r20, r18
  48:	c0 01       	movw	r24, r0
  4a:	43 9f       	mul	r20, r19
  4c:	90 0d       	add	r25, r0
  4e:	52 9f       	mul	r21, r18
  50:	90 0d       	add	r25, r0
  52:	11 24       	eor	r1, r1
  54:	08 95       	ret

timer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initTimer 000000b4  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.getTimer 0000002c  00000000  00000000  000000e8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.initPWM 00000038  00000000  00000000  00000114  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.setPWM  0000002e  00000000  00000000  0000014c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.setCompValue 00000044  00000000  00000000  0000017a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.setTimerInterrupt 0000002a  00000000  00000000  000001be  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.__vector_16 00000052  00000000  00000000  000001e8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.__vector_13 00000052  00000000  00000000  0000023a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.__vector_9 00000052  00000000  00000000  0000028c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .bss.timer2   00000002  00000000  00000000  000002de  2**0
                  ALLOC
 13 .bss.timer1   00000002  00000000  00000000  000002de  2**0
                  ALLOC
 14 .bss.timer0   00000002  00000000  00000000  000002de  2**0
                  ALLOC
 15 .comment      00000012  00000000  00000000  000002de  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initTimer:

00000000 <initTimer>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	eb 01       	movw	r28, r22
   c:	f8 94       	cli
   e:	a2 e1       	ldi	r26, 0x12	; 18
  10:	b0 e0       	ldi	r27, 0x00	; 0
  12:	0e 94 00 00 	call	0	; 0x0 <initTimer>
  16:	28 ee       	ldi	r18, 0xE8	; 232
  18:	33 e0       	ldi	r19, 0x03	; 3
  1a:	40 e0       	ldi	r20, 0x00	; 0
  1c:	50 e0       	ldi	r21, 0x00	; 0
  1e:	0e 94 00 00 	call	0	; 0x0 <initTimer>
  22:	21 50       	subi	r18, 0x01	; 1
  24:	31 09       	sbc	r19, r1
  26:	41 09       	sbc	r20, r1
  28:	51 09       	sbc	r21, r1
  2a:	01 30       	cpi	r16, 0x01	; 1
  2c:	11 05       	cpc	r17, r1
  2e:	01 f0       	breq	.+0      	; 0x30 <initTimer+0x30>
  30:	02 30       	cpi	r16, 0x02	; 2
  32:	11 05       	cpc	r17, r1
  34:	01 f0       	breq	.+0      	; 0x36 <initTimer+0x36>
  36:	01 2b       	or	r16, r17
  38:	01 f4       	brne	.+0      	; 0x3a <initTimer+0x3a>
  3a:	ce 01       	movw	r24, r28
  3c:	46 e0       	ldi	r20, 0x06	; 6
  3e:	88 0f       	add	r24, r24
  40:	99 1f       	adc	r25, r25
  42:	4a 95       	dec	r20
  44:	01 f4       	brne	.+0      	; 0x46 <initTimer+0x46>
  46:	c8 2b       	or	r28, r24
  48:	c4 bd       	out	0x24, r28	; 36
  4a:	85 e0       	ldi	r24, 0x05	; 5
  4c:	85 bd       	out	0x25, r24	; 37
  4e:	27 bd       	out	0x27, r18	; 39
  50:	80 91 6e 00 	lds	r24, 0x006E
  54:	82 60       	ori	r24, 0x02	; 2
  56:	80 93 6e 00 	sts	0x006E, r24
  5a:	00 c0       	rjmp	.+0      	; 0x5c <initTimer+0x5c>
  5c:	c2 95       	swap	r28
  5e:	cc 0f       	add	r28, r28
  60:	cc 0f       	add	r28, r28
  62:	c0 7c       	andi	r28, 0xC0	; 192
  64:	c0 93 80 00 	sts	0x0080, r28
  68:	8d e0       	ldi	r24, 0x0D	; 13
  6a:	80 93 81 00 	sts	0x0081, r24
  6e:	30 93 89 00 	sts	0x0089, r19
  72:	20 93 88 00 	sts	0x0088, r18
  76:	80 91 6f 00 	lds	r24, 0x006F
  7a:	82 60       	ori	r24, 0x02	; 2
  7c:	80 93 6f 00 	sts	0x006F, r24
  80:	00 c0       	rjmp	.+0      	; 0x82 <initTimer+0x82>
  82:	ce 01       	movw	r24, r28
  84:	36 e0       	ldi	r19, 0x06	; 6
  86:	88 0f       	add	r24, r24
  88:	99 1f       	adc	r25, r25
  8a:	3a 95       	dec	r19
  8c:	01 f4       	brne	.+0      	; 0x8e <initTimer+0x8e>
  8e:	c8 2b       	or	r28, r24
  90:	c0 93 b0 00 	sts	0x00B0, r28
  94:	85 e0       	ldi	r24, 0x05	; 5
  96:	80 93 b1 00 	sts	0x00B1, r24
  9a:	20 93 b3 00 	sts	0x00B3, r18
  9e:	80 91 70 00 	lds	r24, 0x0070
  a2:	82 60       	ori	r24, 0x02	; 2
  a4:	80 93 70 00 	sts	0x0070, r24
  a8:	78 94       	sei
  aa:	df 91       	pop	r29
  ac:	cf 91       	pop	r28
  ae:	1f 91       	pop	r17
  b0:	0f 91       	pop	r16
  b2:	08 95       	ret

Disassembly of section .text.getTimer:

000000b4 <getTimer>:
  b4:	81 30       	cpi	r24, 0x01	; 1
  b6:	91 05       	cpc	r25, r1
  b8:	01 f0       	breq	.+0      	; 0xba <getTimer+0x6>
  ba:	82 30       	cpi	r24, 0x02	; 2
  bc:	91 05       	cpc	r25, r1
  be:	01 f0       	breq	.+0      	; 0xc0 <getTimer+0xc>
  c0:	89 2b       	or	r24, r25
  c2:	01 f4       	brne	.+0      	; 0xc4 <getTimer+0x10>
  c4:	86 b5       	in	r24, 0x26	; 38
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <getTimer+0x14>
  c8:	80 91 84 00 	lds	r24, 0x0084
  cc:	90 91 85 00 	lds	r25, 0x0085
  d0:	08 95       	ret
  d2:	80 91 b2 00 	lds	r24, 0x00B2
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	08 95       	ret
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	08 95       	ret

Disassembly of section .text.initPWM:

00000194 <initPWM>:
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	01 f0       	breq	.+0      	; 0x198 <initPWM+0x4>
 198:	00 f0       	brcs	.+0      	; 0x19a <initPWM+0x6>
 19a:	82 30       	cpi	r24, 0x02	; 2
 19c:	01 f0       	breq	.+0      	; 0x19e <initPWM+0xa>
 19e:	08 95       	ret
 1a0:	24 9a       	sbi	0x04, 4	; 4
 1a2:	81 e6       	ldi	r24, 0x61	; 97
 1a4:	84 bd       	out	0x24, r24	; 36
 1a6:	8d e0       	ldi	r24, 0x0D	; 13
 1a8:	85 bd       	out	0x25, r24	; 37
 1aa:	08 95       	ret
 1ac:	54 9a       	sbi	0x0a, 4	; 10
 1ae:	83 ea       	ldi	r24, 0xA3	; 163
 1b0:	80 93 80 00 	sts	0x0080, r24
 1b4:	85 e1       	ldi	r24, 0x15	; 21
 1b6:	80 93 81 00 	sts	0x0081, r24
 1ba:	08 95       	ret
 1bc:	56 9a       	sbi	0x0a, 6	; 10
 1be:	81 e6       	ldi	r24, 0x61	; 97
 1c0:	80 93 b0 00 	sts	0x00B0, r24
 1c4:	8d e0       	ldi	r24, 0x0D	; 13
 1c6:	80 93 b1 00 	sts	0x00B1, r24
 1ca:	08 95       	ret

Disassembly of section .text.setPWM:

00000360 <setPWM>:
 360:	81 30       	cpi	r24, 0x01	; 1
 362:	01 f0       	breq	.+0      	; 0x364 <setPWM+0x4>
 364:	00 f0       	brcs	.+0      	; 0x366 <setPWM+0x6>
 366:	82 30       	cpi	r24, 0x02	; 2
 368:	01 f0       	breq	.+0      	; 0x36a <setPWM+0xa>
 36a:	08 95       	ret
 36c:	67 bd       	out	0x27, r22	; 39
 36e:	48 bd       	out	0x28, r20	; 40
 370:	08 95       	ret
 372:	70 93 89 00 	sts	0x0089, r23
 376:	60 93 88 00 	sts	0x0088, r22
 37a:	50 93 8b 00 	sts	0x008B, r21
 37e:	40 93 8a 00 	sts	0x008A, r20
 382:	08 95       	ret
 384:	60 93 b3 00 	sts	0x00B3, r22
 388:	40 93 b4 00 	sts	0x00B4, r20
 38c:	08 95       	ret

Disassembly of section .text.setCompValue:

000006ee <setCompValue>:
 6ee:	cf 93       	push	r28
 6f0:	c8 2f       	mov	r28, r24
 6f2:	a2 e1       	ldi	r26, 0x12	; 18
 6f4:	b0 e0       	ldi	r27, 0x00	; 0
 6f6:	9a 01       	movw	r18, r20
 6f8:	ab 01       	movw	r20, r22
 6fa:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 6fe:	28 ee       	ldi	r18, 0xE8	; 232
 700:	33 e0       	ldi	r19, 0x03	; 3
 702:	40 e0       	ldi	r20, 0x00	; 0
 704:	50 e0       	ldi	r21, 0x00	; 0
 706:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 70a:	21 50       	subi	r18, 0x01	; 1
 70c:	31 09       	sbc	r19, r1
 70e:	41 09       	sbc	r20, r1
 710:	51 09       	sbc	r21, r1
 712:	c1 30       	cpi	r28, 0x01	; 1
 714:	01 f0       	breq	.+0      	; 0x716 <setCompValue+0x28>
 716:	00 f0       	brcs	.+0      	; 0x718 <setCompValue+0x2a>
 718:	c2 30       	cpi	r28, 0x02	; 2
 71a:	01 f4       	brne	.+0      	; 0x71c <setCompValue+0x2e>
 71c:	20 93 b3 00 	sts	0x00B3, r18
 720:	00 c0       	rjmp	.+0      	; 0x722 <setCompValue+0x34>
 722:	27 bd       	out	0x27, r18	; 39
 724:	00 c0       	rjmp	.+0      	; 0x726 <setCompValue+0x38>
 726:	30 93 89 00 	sts	0x0089, r19
 72a:	20 93 88 00 	sts	0x0088, r18
 72e:	cf 91       	pop	r28
 730:	08 95       	ret

Disassembly of section .text.setTimerInterrupt:

00000e20 <setTimerInterrupt>:
 e20:	81 30       	cpi	r24, 0x01	; 1
 e22:	01 f0       	breq	.+0      	; 0xe24 <setTimerInterrupt+0x4>
 e24:	00 f0       	brcs	.+0      	; 0xe26 <setTimerInterrupt+0x6>
 e26:	82 30       	cpi	r24, 0x02	; 2
 e28:	01 f0       	breq	.+0      	; 0xe2a <setTimerInterrupt+0xa>
 e2a:	08 95       	ret
 e2c:	70 93 00 00 	sts	0x0000, r23
 e30:	60 93 00 00 	sts	0x0000, r22
 e34:	08 95       	ret
 e36:	70 93 00 00 	sts	0x0000, r23
 e3a:	60 93 00 00 	sts	0x0000, r22
 e3e:	08 95       	ret
 e40:	70 93 00 00 	sts	0x0000, r23
 e44:	60 93 00 00 	sts	0x0000, r22
 e48:	08 95       	ret

Disassembly of section .text.__vector_16:

00001c6a <__vector_16>:
    1c6a:	1f 92       	push	r1
    1c6c:	0f 92       	push	r0
    1c6e:	0f b6       	in	r0, 0x3f	; 63
    1c70:	0f 92       	push	r0
    1c72:	11 24       	eor	r1, r1
    1c74:	2f 93       	push	r18
    1c76:	3f 93       	push	r19
    1c78:	4f 93       	push	r20
    1c7a:	5f 93       	push	r21
    1c7c:	6f 93       	push	r22
    1c7e:	7f 93       	push	r23
    1c80:	8f 93       	push	r24
    1c82:	9f 93       	push	r25
    1c84:	af 93       	push	r26
    1c86:	bf 93       	push	r27
    1c88:	ef 93       	push	r30
    1c8a:	ff 93       	push	r31
    1c8c:	e0 91 00 00 	lds	r30, 0x0000
    1c90:	f0 91 00 00 	lds	r31, 0x0000
    1c94:	30 97       	sbiw	r30, 0x00	; 0
    1c96:	01 f0       	breq	.+0      	; 0x1c98 <__vector_16+0x2e>
    1c98:	09 95       	icall
    1c9a:	ff 91       	pop	r31
    1c9c:	ef 91       	pop	r30
    1c9e:	bf 91       	pop	r27
    1ca0:	af 91       	pop	r26
    1ca2:	9f 91       	pop	r25
    1ca4:	8f 91       	pop	r24
    1ca6:	7f 91       	pop	r23
    1ca8:	6f 91       	pop	r22
    1caa:	5f 91       	pop	r21
    1cac:	4f 91       	pop	r20
    1cae:	3f 91       	pop	r19
    1cb0:	2f 91       	pop	r18
    1cb2:	0f 90       	pop	r0
    1cb4:	0f be       	out	0x3f, r0	; 63
    1cb6:	0f 90       	pop	r0
    1cb8:	1f 90       	pop	r1
    1cba:	18 95       	reti

Disassembly of section .text.__vector_13:

00003926 <__vector_13>:
    3926:	1f 92       	push	r1
    3928:	0f 92       	push	r0
    392a:	0f b6       	in	r0, 0x3f	; 63
    392c:	0f 92       	push	r0
    392e:	11 24       	eor	r1, r1
    3930:	2f 93       	push	r18
    3932:	3f 93       	push	r19
    3934:	4f 93       	push	r20
    3936:	5f 93       	push	r21
    3938:	6f 93       	push	r22
    393a:	7f 93       	push	r23
    393c:	8f 93       	push	r24
    393e:	9f 93       	push	r25
    3940:	af 93       	push	r26
    3942:	bf 93       	push	r27
    3944:	ef 93       	push	r30
    3946:	ff 93       	push	r31
    3948:	e0 91 00 00 	lds	r30, 0x0000
    394c:	f0 91 00 00 	lds	r31, 0x0000
    3950:	30 97       	sbiw	r30, 0x00	; 0
    3952:	01 f0       	breq	.+0      	; 0x3954 <__vector_13+0x2e>
    3954:	09 95       	icall
    3956:	ff 91       	pop	r31
    3958:	ef 91       	pop	r30
    395a:	bf 91       	pop	r27
    395c:	af 91       	pop	r26
    395e:	9f 91       	pop	r25
    3960:	8f 91       	pop	r24
    3962:	7f 91       	pop	r23
    3964:	6f 91       	pop	r22
    3966:	5f 91       	pop	r21
    3968:	4f 91       	pop	r20
    396a:	3f 91       	pop	r19
    396c:	2f 91       	pop	r18
    396e:	0f 90       	pop	r0
    3970:	0f be       	out	0x3f, r0	; 63
    3972:	0f 90       	pop	r0
    3974:	1f 90       	pop	r1
    3976:	18 95       	reti

Disassembly of section .text.__vector_9:

0000729e <__vector_9>:
    729e:	1f 92       	push	r1
    72a0:	0f 92       	push	r0
    72a2:	0f b6       	in	r0, 0x3f	; 63
    72a4:	0f 92       	push	r0
    72a6:	11 24       	eor	r1, r1
    72a8:	2f 93       	push	r18
    72aa:	3f 93       	push	r19
    72ac:	4f 93       	push	r20
    72ae:	5f 93       	push	r21
    72b0:	6f 93       	push	r22
    72b2:	7f 93       	push	r23
    72b4:	8f 93       	push	r24
    72b6:	9f 93       	push	r25
    72b8:	af 93       	push	r26
    72ba:	bf 93       	push	r27
    72bc:	ef 93       	push	r30
    72be:	ff 93       	push	r31
    72c0:	e0 91 00 00 	lds	r30, 0x0000
    72c4:	f0 91 00 00 	lds	r31, 0x0000
    72c8:	30 97       	sbiw	r30, 0x00	; 0
    72ca:	01 f0       	breq	.+0      	; 0x72cc <__vector_9+0x2e>
    72cc:	09 95       	icall
    72ce:	ff 91       	pop	r31
    72d0:	ef 91       	pop	r30
    72d2:	bf 91       	pop	r27
    72d4:	af 91       	pop	r26
    72d6:	9f 91       	pop	r25
    72d8:	8f 91       	pop	r24
    72da:	7f 91       	pop	r23
    72dc:	6f 91       	pop	r22
    72de:	5f 91       	pop	r21
    72e0:	4f 91       	pop	r20
    72e2:	3f 91       	pop	r19
    72e4:	2f 91       	pop	r18
    72e6:	0f 90       	pop	r0
    72e8:	0f be       	out	0x3f, r0	; 63
    72ea:	0f 90       	pop	r0
    72ec:	1f 90       	pop	r1
    72ee:	18 95       	reti

util.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.clipf   0000006a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.clipi   00000014  00000000  00000000  0000009e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  000000b2  2**0
                  CONTENTS, READONLY

Disassembly of section .text.clipf:

00000000 <clipf>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	6b 01       	movw	r12, r22
  1a:	d8 2f       	mov	r29, r24
  1c:	c9 2f       	mov	r28, r25
  1e:	49 01       	movw	r8, r18
  20:	5a 01       	movw	r10, r20
  22:	0e 94 00 00 	call	0	; 0x0 <clipf>
  26:	87 fd       	sbrc	r24, 7
  28:	00 c0       	rjmp	.+0      	; 0x2a <clipf+0x2a>
  2a:	97 01       	movw	r18, r14
  2c:	a8 01       	movw	r20, r16
  2e:	b6 01       	movw	r22, r12
  30:	8d 2f       	mov	r24, r29
  32:	9c 2f       	mov	r25, r28
  34:	0e 94 00 00 	call	0	; 0x0 <clipf>
  38:	18 16       	cp	r1, r24
  3a:	04 f4       	brge	.+0      	; 0x3c <clipf+0x3c>
  3c:	67 01       	movw	r12, r14
  3e:	d0 2f       	mov	r29, r16
  40:	c1 2f       	mov	r28, r17
  42:	00 c0       	rjmp	.+0      	; 0x44 <clipf+0x44>
  44:	64 01       	movw	r12, r8
  46:	da 2d       	mov	r29, r10
  48:	cb 2d       	mov	r28, r11
  4a:	b6 01       	movw	r22, r12
  4c:	8d 2f       	mov	r24, r29
  4e:	9c 2f       	mov	r25, r28
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	1f 91       	pop	r17
  56:	0f 91       	pop	r16
  58:	ff 90       	pop	r15
  5a:	ef 90       	pop	r14
  5c:	df 90       	pop	r13
  5e:	cf 90       	pop	r12
  60:	bf 90       	pop	r11
  62:	af 90       	pop	r10
  64:	9f 90       	pop	r9
  66:	8f 90       	pop	r8
  68:	08 95       	ret

Disassembly of section .text.clipi:

0000006a <clipi>:
  6a:	86 17       	cp	r24, r22
  6c:	97 07       	cpc	r25, r23
  6e:	04 f0       	brlt	.+0      	; 0x70 <clipi+0x6>
  70:	48 17       	cp	r20, r24
  72:	59 07       	cpc	r21, r25
  74:	04 f4       	brge	.+0      	; 0x76 <clipi+0xc>
  76:	ca 01       	movw	r24, r20
  78:	08 95       	ret
  7a:	cb 01       	movw	r24, r22
  7c:	08 95       	ret
