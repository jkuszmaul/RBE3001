In archive libRBELib.a:

SetServo.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e6  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000014  00000000  00000000  0000011a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000012e  2**0
                  ALLOC

Disassembly of section .text:

00000000 <initAltCom>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <initAltCom+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <initAltCom>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	30 40       	sbci	r19, 0x00	; 0
  22:	30 93 c5 00 	sts	0x00C5, r19
  26:	20 93 c4 00 	sts	0x00C4, r18
  2a:	88 e1       	ldi	r24, 0x18	; 24
  2c:	80 93 c1 00 	sts	0x00C1, r24
  30:	86 e0       	ldi	r24, 0x06	; 6
  32:	80 93 c2 00 	sts	0x00C2, r24
  36:	08 95       	ret

00000038 <setCharDebug>:
  38:	98 2f       	mov	r25, r24
  3a:	80 91 c0 00 	lds	r24, 0x00C0
  3e:	85 ff       	sbrs	r24, 5
  40:	00 c0       	rjmp	.+0      	; 0x42 <setCharDebug+0xa>
  42:	90 93 c6 00 	sts	0x00C6, r25
  46:	08 95       	ret

00000048 <coPrintf>:
  48:	fc 01       	movw	r30, r24
  4a:	00 c0       	rjmp	.+0      	; 0x4c <coPrintf+0x4>
  4c:	80 91 c0 00 	lds	r24, 0x00C0
  50:	85 ff       	sbrs	r24, 5
  52:	00 c0       	rjmp	.+0      	; 0x54 <coPrintf+0xc>
  54:	90 93 c6 00 	sts	0x00C6, r25
  58:	31 96       	adiw	r30, 0x01	; 1
  5a:	90 81       	ld	r25, Z
  5c:	99 23       	and	r25, r25
  5e:	01 f4       	brne	.+0      	; 0x60 <coPrintf+0x18>
  60:	08 95       	ret

00000062 <setServo>:
  62:	0f 93       	push	r16
  64:	1f 93       	push	r17
  66:	df 93       	push	r29
  68:	cf 93       	push	r28
  6a:	cd b7       	in	r28, 0x3d	; 61
  6c:	de b7       	in	r29, 0x3e	; 62
  6e:	64 97       	sbiw	r28, 0x14	; 20
  70:	0f b6       	in	r0, 0x3f	; 63
  72:	f8 94       	cli
  74:	de bf       	out	0x3e, r29	; 62
  76:	0f be       	out	0x3f, r0	; 63
  78:	cd bf       	out	0x3d, r28	; 61
  7a:	2d b7       	in	r18, 0x3d	; 61
  7c:	3e b7       	in	r19, 0x3e	; 62
  7e:	28 50       	subi	r18, 0x08	; 8
  80:	30 40       	sbci	r19, 0x00	; 0
  82:	0f b6       	in	r0, 0x3f	; 63
  84:	f8 94       	cli
  86:	3e bf       	out	0x3e, r19	; 62
  88:	0f be       	out	0x3f, r0	; 63
  8a:	2d bf       	out	0x3d, r18	; 61
  8c:	ed b7       	in	r30, 0x3d	; 61
  8e:	fe b7       	in	r31, 0x3e	; 62
  90:	31 96       	adiw	r30, 0x01	; 1
  92:	8e 01       	movw	r16, r28
  94:	0f 5f       	subi	r16, 0xFF	; 255
  96:	1f 4f       	sbci	r17, 0xFF	; 255
  98:	ad b7       	in	r26, 0x3d	; 61
  9a:	be b7       	in	r27, 0x3e	; 62
  9c:	12 96       	adiw	r26, 0x02	; 2
  9e:	1c 93       	st	X, r17
  a0:	0e 93       	st	-X, r16
  a2:	11 97       	sbiw	r26, 0x01	; 1
  a4:	20 e0       	ldi	r18, 0x00	; 0
  a6:	30 e0       	ldi	r19, 0x00	; 0
  a8:	33 83       	std	Z+3, r19	; 0x03
  aa:	22 83       	std	Z+2, r18	; 0x02
  ac:	95 83       	std	Z+5, r25	; 0x05
  ae:	84 83       	std	Z+4, r24	; 0x04
  b0:	77 83       	std	Z+7, r23	; 0x07
  b2:	66 83       	std	Z+6, r22	; 0x06
  b4:	0e 94 00 00 	call	0	; 0x0 <initAltCom>
  b8:	2d b7       	in	r18, 0x3d	; 61
  ba:	3e b7       	in	r19, 0x3e	; 62
  bc:	28 5f       	subi	r18, 0xF8	; 248
  be:	3f 4f       	sbci	r19, 0xFF	; 255
  c0:	0f b6       	in	r0, 0x3f	; 63
  c2:	f8 94       	cli
  c4:	3e bf       	out	0x3e, r19	; 62
  c6:	0f be       	out	0x3f, r0	; 63
  c8:	2d bf       	out	0x3d, r18	; 61
  ca:	c8 01       	movw	r24, r16
  cc:	0e 94 00 00 	call	0	; 0x0 <initAltCom>
  d0:	64 96       	adiw	r28, 0x14	; 20
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	f8 94       	cli
  d6:	de bf       	out	0x3e, r29	; 62
  d8:	0f be       	out	0x3f, r0	; 63
  da:	cd bf       	out	0x3d, r28	; 61
  dc:	cf 91       	pop	r28
  de:	df 91       	pop	r29
  e0:	1f 91       	pop	r17
  e2:	0f 91       	pop	r16
  e4:	08 95       	ret

Debug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000024  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         0000000e  00000000  00000000  00000058  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  2 .bss          00000000  00000000  00000000  00000066  2**0
                  ALLOC

Disassembly of section .text:

00000000 <initRBELib>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	90 93 00 00 	sts	0x0000, r25
   8:	80 93 00 00 	sts	0x0000, r24
   c:	60 e0       	ldi	r22, 0x00	; 0
   e:	72 ec       	ldi	r23, 0xC2	; 194
  10:	81 e0       	ldi	r24, 0x01	; 1
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	0e 94 00 00 	call	0	; 0x0 <initRBELib>
  18:	08 95       	ret

0000001a <printfRBE>:
  1a:	0e 94 00 00 	call	0	; 0x0 <initRBELib>
  1e:	80 e0       	ldi	r24, 0x00	; 0
  20:	90 e0       	ldi	r25, 0x00	; 0
  22:	08 95       	ret
