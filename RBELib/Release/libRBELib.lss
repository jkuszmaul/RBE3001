In archive libRBELib.a:

SetServo.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initAltCom 00000038  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setCharDebug 0000000e  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.coPrintf 00000018  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .rodata.str1.1 00000014  00000000  00000000  00000092  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .text.setServo 0000005c  00000000  00000000  000000a6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .comment      00000012  00000000  00000000  00000102  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initAltCom:

00000000 <initAltCom>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <initAltCom+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <initAltCom>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	31 09       	sbc	r19, r1
  22:	30 93 c5 00 	sts	0x00C5, r19
  26:	20 93 c4 00 	sts	0x00C4, r18
  2a:	88 e1       	ldi	r24, 0x18	; 24
  2c:	80 93 c1 00 	sts	0x00C1, r24
  30:	86 e0       	ldi	r24, 0x06	; 6
  32:	80 93 c2 00 	sts	0x00C2, r24
  36:	08 95       	ret

Disassembly of section .text.setCharDebug:

00000038 <setCharDebug>:
  38:	90 91 c0 00 	lds	r25, 0x00C0
  3c:	95 ff       	sbrs	r25, 5
  3e:	00 c0       	rjmp	.+0      	; 0x40 <setCharDebug+0x8>
  40:	80 93 c6 00 	sts	0x00C6, r24
  44:	08 95       	ret

Disassembly of section .text.coPrintf:

0000007e <coPrintf>:
  7e:	cf 93       	push	r28
  80:	df 93       	push	r29
  82:	ec 01       	movw	r28, r24
  84:	89 91       	ld	r24, Y+
  86:	88 23       	and	r24, r24
  88:	01 f0       	breq	.+0      	; 0x8a <coPrintf+0xc>
  8a:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <coPrintf+0x12>
  90:	df 91       	pop	r29
  92:	cf 91       	pop	r28
  94:	08 95       	ret

Disassembly of section .text.setServo:

0000023c <setServo>:
 23c:	0f 93       	push	r16
 23e:	1f 93       	push	r17
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	cd b7       	in	r28, 0x3d	; 61
 246:	de b7       	in	r29, 0x3e	; 62
 248:	64 97       	sbiw	r28, 0x14	; 20
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	f8 94       	cli
 24e:	de bf       	out	0x3e, r29	; 62
 250:	0f be       	out	0x3f, r0	; 63
 252:	cd bf       	out	0x3d, r28	; 61
 254:	7f 93       	push	r23
 256:	6f 93       	push	r22
 258:	9f 93       	push	r25
 25a:	8f 93       	push	r24
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	9f 93       	push	r25
 262:	8f 93       	push	r24
 264:	8e 01       	movw	r16, r28
 266:	0f 5f       	subi	r16, 0xFF	; 255
 268:	1f 4f       	sbci	r17, 0xFF	; 255
 26a:	1f 93       	push	r17
 26c:	0f 93       	push	r16
 26e:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 272:	c8 01       	movw	r24, r16
 274:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	f8 94       	cli
 27c:	de bf       	out	0x3e, r29	; 62
 27e:	0f be       	out	0x3f, r0	; 63
 280:	cd bf       	out	0x3d, r28	; 61
 282:	64 96       	adiw	r28, 0x14	; 20
 284:	0f b6       	in	r0, 0x3f	; 63
 286:	f8 94       	cli
 288:	de bf       	out	0x3e, r29	; 62
 28a:	0f be       	out	0x3f, r0	; 63
 28c:	cd bf       	out	0x3d, r28	; 61
 28e:	df 91       	pop	r29
 290:	cf 91       	pop	r28
 292:	1f 91       	pop	r17
 294:	0f 91       	pop	r16
 296:	08 95       	ret

ADC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initADC 0000006e  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.clearADC 00000014  00000000  00000000  000000a2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.getADCFree 0000000a  00000000  00000000  000000b6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.changeADC 0000001c  00000000  00000000  000000c0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.getADC  0000002a  00000000  00000000  000000dc  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.setADCInterrupt 0000000a  00000000  00000000  00000106  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.__vector_24 00000052  00000000  00000000  00000110  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .bss.g_ADCCallback 00000002  00000000  00000000  00000162  2**0
                  ALLOC
 11 .comment      00000012  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initADC:

00000000 <initADC>:
   0:	f8 94       	cli
   2:	88 30       	cpi	r24, 0x08	; 8
   4:	91 05       	cpc	r25, r1
   6:	04 f4       	brge	.+0      	; 0x8 <initADC+0x8>
   8:	91 b1       	in	r25, 0x01	; 1
   a:	21 e0       	ldi	r18, 0x01	; 1
   c:	30 e0       	ldi	r19, 0x00	; 0
   e:	08 2e       	mov	r0, r24
  10:	00 c0       	rjmp	.+0      	; 0x12 <initADC+0x12>
  12:	22 0f       	add	r18, r18
  14:	0a 94       	dec	r0
  16:	02 f4       	brpl	.+0      	; 0x18 <initADC+0x18>
  18:	20 95       	com	r18
  1a:	29 23       	and	r18, r25
  1c:	21 b9       	out	0x01, r18	; 1
  1e:	80 64       	ori	r24, 0x40	; 64
  20:	80 93 7c 00 	sts	0x007C, r24
  24:	20 91 7a 00 	lds	r18, 0x007A
  28:	27 60       	ori	r18, 0x07	; 7
  2a:	cb 01       	movw	r24, r22
  2c:	35 e0       	ldi	r19, 0x05	; 5
  2e:	88 0f       	add	r24, r24
  30:	99 1f       	adc	r25, r25
  32:	3a 95       	dec	r19
  34:	01 f4       	brne	.+0      	; 0x36 <initADC+0x36>
  36:	80 68       	ori	r24, 0x80	; 128
  38:	e3 e0       	ldi	r30, 0x03	; 3
  3a:	44 0f       	add	r20, r20
  3c:	55 1f       	adc	r21, r21
  3e:	ea 95       	dec	r30
  40:	01 f4       	brne	.+0      	; 0x42 <initADC+0x42>
  42:	84 2b       	or	r24, r20
  44:	28 2b       	or	r18, r24
  46:	20 93 7a 00 	sts	0x007A, r18
  4a:	61 15       	cp	r22, r1
  4c:	71 05       	cpc	r23, r1
  4e:	01 f4       	brne	.+0      	; 0x50 <initADC+0x50>
  50:	80 91 7b 00 	lds	r24, 0x007B
  54:	00 c0       	rjmp	.+0      	; 0x56 <initADC+0x56>
  56:	80 e0       	ldi	r24, 0x00	; 0
  58:	80 93 7b 00 	sts	0x007B, r24
  5c:	67 2b       	or	r22, r23
  5e:	01 f0       	breq	.+0      	; 0x60 <initADC+0x60>
  60:	80 91 7a 00 	lds	r24, 0x007A
  64:	80 64       	ori	r24, 0x40	; 64
  66:	80 93 7a 00 	sts	0x007A, r24
  6a:	78 94       	sei
  6c:	08 95       	ret

Disassembly of section .text.clearADC:

0000006e <clearADC>:
  6e:	ea e7       	ldi	r30, 0x7A	; 122
  70:	f0 e0       	ldi	r31, 0x00	; 0
  72:	80 81       	ld	r24, Z
  74:	8f 77       	andi	r24, 0x7F	; 127
  76:	80 83       	st	Z, r24
  78:	10 92 79 00 	sts	0x0079, r1
  7c:	10 92 78 00 	sts	0x0078, r1
  80:	08 95       	ret

Disassembly of section .text.getADCFree:

000000f0 <getADCFree>:
  f0:	80 91 78 00 	lds	r24, 0x0078
  f4:	90 91 79 00 	lds	r25, 0x0079
  f8:	08 95       	ret

Disassembly of section .text.changeADC:

000001ea <changeADC>:
 1ea:	88 30       	cpi	r24, 0x08	; 8
 1ec:	91 05       	cpc	r25, r1
 1ee:	04 f4       	brge	.+0      	; 0x1f0 <changeADC+0x6>
 1f0:	90 91 7c 00 	lds	r25, 0x007C
 1f4:	90 7e       	andi	r25, 0xE0	; 224
 1f6:	90 93 7c 00 	sts	0x007C, r25
 1fa:	90 91 7c 00 	lds	r25, 0x007C
 1fe:	98 2b       	or	r25, r24
 200:	90 93 7c 00 	sts	0x007C, r25
 204:	08 95       	ret

Disassembly of section .text.getADC:

000003f0 <getADC>:
 3f0:	20 91 7a 00 	lds	r18, 0x007A
 3f4:	2f 7d       	andi	r18, 0xDF	; 223
 3f6:	20 93 7a 00 	sts	0x007A, r18
 3fa:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 3fe:	80 91 7a 00 	lds	r24, 0x007A
 402:	80 64       	ori	r24, 0x40	; 64
 404:	80 93 7a 00 	sts	0x007A, r24
 408:	80 91 7a 00 	lds	r24, 0x007A
 40c:	86 fd       	sbrc	r24, 6
 40e:	00 c0       	rjmp	.+0      	; 0x410 <getADC+0x20>
 410:	80 91 78 00 	lds	r24, 0x0078
 414:	90 91 79 00 	lds	r25, 0x0079
 418:	08 95       	ret

Disassembly of section .text.setADCInterrupt:

0000080a <setADCInterrupt>:
 80a:	90 93 00 00 	sts	0x0000, r25
 80e:	80 93 00 00 	sts	0x0000, r24
 812:	08 95       	ret

Disassembly of section .text.__vector_24:

0000101e <__vector_24>:
    101e:	1f 92       	push	r1
    1020:	0f 92       	push	r0
    1022:	0f b6       	in	r0, 0x3f	; 63
    1024:	0f 92       	push	r0
    1026:	11 24       	eor	r1, r1
    1028:	2f 93       	push	r18
    102a:	3f 93       	push	r19
    102c:	4f 93       	push	r20
    102e:	5f 93       	push	r21
    1030:	6f 93       	push	r22
    1032:	7f 93       	push	r23
    1034:	8f 93       	push	r24
    1036:	9f 93       	push	r25
    1038:	af 93       	push	r26
    103a:	bf 93       	push	r27
    103c:	ef 93       	push	r30
    103e:	ff 93       	push	r31
    1040:	e0 91 00 00 	lds	r30, 0x0000
    1044:	f0 91 00 00 	lds	r31, 0x0000
    1048:	30 97       	sbiw	r30, 0x00	; 0
    104a:	01 f0       	breq	.+0      	; 0x104c <__vector_24+0x2e>
    104c:	09 95       	icall
    104e:	ff 91       	pop	r31
    1050:	ef 91       	pop	r30
    1052:	bf 91       	pop	r27
    1054:	af 91       	pop	r26
    1056:	9f 91       	pop	r25
    1058:	8f 91       	pop	r24
    105a:	7f 91       	pop	r23
    105c:	6f 91       	pop	r22
    105e:	5f 91       	pop	r21
    1060:	4f 91       	pop	r20
    1062:	3f 91       	pop	r19
    1064:	2f 91       	pop	r18
    1066:	0f 90       	pop	r0
    1068:	0f be       	out	0x3f, r0	; 63
    106a:	0f 90       	pop	r0
    106c:	1f 90       	pop	r1
    106e:	18 95       	reti

DAC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setDAC  00000046  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .comment      00000012  00000000  00000000  0000007a  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setDAC:

00000000 <setDAC>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	eb 01       	movw	r28, r22
   6:	85 30       	cpi	r24, 0x05	; 5
   8:	91 05       	cpc	r25, r1
   a:	00 f4       	brcc	.+0      	; 0xc <setDAC+0xc>
   c:	90 91 2b 00 	lds	r25, 0x002B
  10:	9f 7e       	andi	r25, 0xEF	; 239
  12:	90 93 2b 00 	sts	0x002B, r25
  16:	80 63       	ori	r24, 0x30	; 48
  18:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  1c:	ce 01       	movw	r24, r28
  1e:	24 e0       	ldi	r18, 0x04	; 4
  20:	95 95       	asr	r25
  22:	87 95       	ror	r24
  24:	2a 95       	dec	r18
  26:	01 f4       	brne	.+0      	; 0x28 <setDAC+0x28>
  28:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  2c:	8c 2f       	mov	r24, r28
  2e:	82 95       	swap	r24
  30:	80 7f       	andi	r24, 0xF0	; 240
  32:	0e 94 00 00 	call	0	; 0x0 <setDAC>
  36:	80 91 2b 00 	lds	r24, 0x002B
  3a:	80 61       	ori	r24, 0x10	; 16
  3c:	80 93 2b 00 	sts	0x002B, r24
  40:	df 91       	pop	r29
  42:	cf 91       	pop	r28
  44:	08 95       	ret

Debug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.printfRBE 0000000a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.initRBELib 00000018  00000000  00000000  0000003e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .data.RBEOut  0000000e  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  6 .comment      00000012  00000000  00000000  00000064  2**0
                  CONTENTS, READONLY

Disassembly of section .text.printfRBE:

00000000 <printfRBE>:
   0:	0e 94 00 00 	call	0	; 0x0 <printfRBE>
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text.initRBELib:

0000000a <initRBELib>:
   a:	80 e0       	ldi	r24, 0x00	; 0
   c:	90 e0       	ldi	r25, 0x00	; 0
   e:	90 93 00 00 	sts	0x0000, r25
  12:	80 93 00 00 	sts	0x0000, r24
  16:	60 e0       	ldi	r22, 0x00	; 0
  18:	72 ec       	ldi	r23, 0xC2	; 194
  1a:	81 e0       	ldi	r24, 0x01	; 1
  1c:	90 e0       	ldi	r25, 0x00	; 0
  1e:	0c 94 00 00 	jmp	0	; 0x0 <__tmp_reg__>

SPI.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initSPI 0000009c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.spiTransceive 0000000c  00000000  00000000  000000d0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  000000dc  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initSPI:

00000000 <initSPI>:
   0:	80 91 24 00 	lds	r24, 0x0024
   4:	80 62       	ori	r24, 0x20	; 32
   6:	80 93 24 00 	sts	0x0024, r24
   a:	80 91 24 00 	lds	r24, 0x0024
   e:	8f 7b       	andi	r24, 0xBF	; 191
  10:	80 93 24 00 	sts	0x0024, r24
  14:	80 91 24 00 	lds	r24, 0x0024
  18:	80 68       	ori	r24, 0x80	; 128
  1a:	80 93 24 00 	sts	0x0024, r24
  1e:	81 e5       	ldi	r24, 0x51	; 81
  20:	8c bd       	out	0x2c, r24	; 44
  22:	80 91 27 00 	lds	r24, 0x0027
  26:	80 62       	ori	r24, 0x20	; 32
  28:	80 93 27 00 	sts	0x0027, r24
  2c:	80 91 27 00 	lds	r24, 0x0027
  30:	80 61       	ori	r24, 0x10	; 16
  32:	80 93 27 00 	sts	0x0027, r24
  36:	80 91 27 00 	lds	r24, 0x0027
  3a:	88 60       	ori	r24, 0x08	; 8
  3c:	80 93 27 00 	sts	0x0027, r24
  40:	80 91 27 00 	lds	r24, 0x0027
  44:	84 60       	ori	r24, 0x04	; 4
  46:	80 93 27 00 	sts	0x0027, r24
  4a:	80 91 2a 00 	lds	r24, 0x002A
  4e:	80 61       	ori	r24, 0x10	; 16
  50:	80 93 2a 00 	sts	0x002A, r24
  54:	80 91 27 00 	lds	r24, 0x0027
  58:	80 64       	ori	r24, 0x40	; 64
  5a:	80 93 27 00 	sts	0x0027, r24
  5e:	80 91 28 00 	lds	r24, 0x0028
  62:	80 62       	ori	r24, 0x20	; 32
  64:	80 93 28 00 	sts	0x0028, r24
  68:	80 91 28 00 	lds	r24, 0x0028
  6c:	80 61       	ori	r24, 0x10	; 16
  6e:	80 93 28 00 	sts	0x0028, r24
  72:	80 91 28 00 	lds	r24, 0x0028
  76:	88 60       	ori	r24, 0x08	; 8
  78:	80 93 28 00 	sts	0x0028, r24
  7c:	80 91 28 00 	lds	r24, 0x0028
  80:	84 60       	ori	r24, 0x04	; 4
  82:	80 93 28 00 	sts	0x0028, r24
  86:	80 91 2b 00 	lds	r24, 0x002B
  8a:	80 61       	ori	r24, 0x10	; 16
  8c:	80 93 2b 00 	sts	0x002B, r24
  90:	80 91 28 00 	lds	r24, 0x0028
  94:	80 64       	ori	r24, 0x40	; 64
  96:	80 93 28 00 	sts	0x0028, r24
  9a:	08 95       	ret

Disassembly of section .text.spiTransceive:

0000009c <spiTransceive>:
  9c:	8e bd       	out	0x2e, r24	; 46
  9e:	0d b4       	in	r0, 0x2d	; 45
  a0:	07 fe       	sbrs	r0, 7
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <spiTransceive+0x8>
  a4:	8e b5       	in	r24, 0x2e	; 46
  a6:	08 95       	ret

USARTDebug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.debugUSARTInit 00000038  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.putCharDebug 0000000e  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.getCharDebug 0000000e  00000000  00000000  0000007a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  00000088  2**0
                  CONTENTS, READONLY

Disassembly of section .text.debugUSARTInit:

00000000 <debugUSARTInit>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <debugUSARTInit+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <debugUSARTInit>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	31 09       	sbc	r19, r1
  22:	30 93 cd 00 	sts	0x00CD, r19
  26:	20 93 cc 00 	sts	0x00CC, r18
  2a:	88 e1       	ldi	r24, 0x18	; 24
  2c:	80 93 c9 00 	sts	0x00C9, r24
  30:	86 e0       	ldi	r24, 0x06	; 6
  32:	80 93 ca 00 	sts	0x00CA, r24
  36:	08 95       	ret

Disassembly of section .text.putCharDebug:

00000038 <putCharDebug>:
  38:	90 91 c8 00 	lds	r25, 0x00C8
  3c:	95 ff       	sbrs	r25, 5
  3e:	00 c0       	rjmp	.+0      	; 0x40 <putCharDebug+0x8>
  40:	80 93 ce 00 	sts	0x00CE, r24
  44:	08 95       	ret

Disassembly of section .text.getCharDebug:

0000007e <getCharDebug>:
  7e:	80 91 c8 00 	lds	r24, 0x00C8
  82:	87 ff       	sbrs	r24, 7
  84:	00 c0       	rjmp	.+0      	; 0x86 <getCharDebug+0x8>
  86:	80 91 ce 00 	lds	r24, 0x00CE
  8a:	08 95       	ret

ports.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.setPinsDir 000000c0  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.getPinsVal 00000062  00000000  00000000  000000f4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.setPinsVal 000000c0  00000000  00000000  00000156  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .comment      00000012  00000000  00000000  00000216  2**0
                  CONTENTS, READONLY

Disassembly of section .text.setPinsDir:

00000000 <setPinsDir>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	cd b7       	in	r28, 0x3d	; 61
   e:	de b7       	in	r29, 0x3e	; 62
  10:	09 85       	ldd	r16, Y+9	; 0x09
  12:	8a 85       	ldd	r24, Y+10	; 0x0a
  14:	9b 85       	ldd	r25, Y+11	; 0x0b
  16:	fe 01       	movw	r30, r28
  18:	3d 96       	adiw	r30, 0x0d	; 13
  1a:	20 e0       	ldi	r18, 0x00	; 0
  1c:	30 e0       	ldi	r19, 0x00	; 0
  1e:	10 e0       	ldi	r17, 0x00	; 0
  20:	4c 85       	ldd	r20, Y+12	; 0x0c
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	61 e0       	ldi	r22, 0x01	; 1
  26:	70 e0       	ldi	r23, 0x00	; 0
  28:	24 17       	cp	r18, r20
  2a:	35 07       	cpc	r19, r21
  2c:	04 f4       	brge	.+0      	; 0x2e <setPinsDir+0x2e>
  2e:	a0 81       	ld	r26, Z
  30:	32 96       	adiw	r30, 0x02	; 2
  32:	7b 01       	movw	r14, r22
  34:	00 c0       	rjmp	.+0      	; 0x36 <setPinsDir+0x36>
  36:	ee 0c       	add	r14, r14
  38:	ff 1c       	adc	r15, r15
  3a:	aa 95       	dec	r26
  3c:	02 f4       	brpl	.+0      	; 0x3e <setPinsDir+0x3e>
  3e:	1e 29       	or	r17, r14
  40:	2f 5f       	subi	r18, 0xFF	; 255
  42:	3f 4f       	sbci	r19, 0xFF	; 255
  44:	00 c0       	rjmp	.+0      	; 0x46 <setPinsDir+0x46>
  46:	02 34       	cpi	r16, 0x42	; 66
  48:	01 f0       	breq	.+0      	; 0x4a <setPinsDir+0x4a>
  4a:	00 f4       	brcc	.+0      	; 0x4c <setPinsDir+0x4c>
  4c:	01 34       	cpi	r16, 0x41	; 65
  4e:	01 f0       	breq	.+0      	; 0x50 <setPinsDir+0x50>
  50:	00 c0       	rjmp	.+0      	; 0x52 <setPinsDir+0x52>
  52:	03 34       	cpi	r16, 0x43	; 67
  54:	01 f0       	breq	.+0      	; 0x56 <setPinsDir+0x56>
  56:	04 34       	cpi	r16, 0x44	; 68
  58:	01 f0       	breq	.+0      	; 0x5a <setPinsDir+0x5a>
  5a:	00 c0       	rjmp	.+0      	; 0x5c <setPinsDir+0x5c>
  5c:	89 2b       	or	r24, r25
  5e:	01 f0       	breq	.+0      	; 0x60 <setPinsDir+0x60>
  60:	81 b1       	in	r24, 0x01	; 1
  62:	10 95       	com	r17
  64:	18 23       	and	r17, r24
  66:	11 b9       	out	0x01, r17	; 1
  68:	00 c0       	rjmp	.+0      	; 0x6a <setPinsDir+0x6a>
  6a:	81 b1       	in	r24, 0x01	; 1
  6c:	81 2b       	or	r24, r17
  6e:	81 b9       	out	0x01, r24	; 1
  70:	00 c0       	rjmp	.+0      	; 0x72 <setPinsDir+0x72>
  72:	89 2b       	or	r24, r25
  74:	01 f0       	breq	.+0      	; 0x76 <setPinsDir+0x76>
  76:	84 b1       	in	r24, 0x04	; 4
  78:	10 95       	com	r17
  7a:	18 23       	and	r17, r24
  7c:	14 b9       	out	0x04, r17	; 4
  7e:	00 c0       	rjmp	.+0      	; 0x80 <setPinsDir+0x80>
  80:	84 b1       	in	r24, 0x04	; 4
  82:	81 2b       	or	r24, r17
  84:	84 b9       	out	0x04, r24	; 4
  86:	00 c0       	rjmp	.+0      	; 0x88 <setPinsDir+0x88>
  88:	89 2b       	or	r24, r25
  8a:	01 f0       	breq	.+0      	; 0x8c <setPinsDir+0x8c>
  8c:	87 b1       	in	r24, 0x07	; 7
  8e:	10 95       	com	r17
  90:	18 23       	and	r17, r24
  92:	17 b9       	out	0x07, r17	; 7
  94:	00 c0       	rjmp	.+0      	; 0x96 <setPinsDir+0x96>
  96:	87 b1       	in	r24, 0x07	; 7
  98:	81 2b       	or	r24, r17
  9a:	87 b9       	out	0x07, r24	; 7
  9c:	00 c0       	rjmp	.+0      	; 0x9e <setPinsDir+0x9e>
  9e:	89 2b       	or	r24, r25
  a0:	01 f0       	breq	.+0      	; 0xa2 <setPinsDir+0xa2>
  a2:	8a b1       	in	r24, 0x0a	; 10
  a4:	10 95       	com	r17
  a6:	18 23       	and	r17, r24
  a8:	1a b9       	out	0x0a, r17	; 10
  aa:	00 c0       	rjmp	.+0      	; 0xac <setPinsDir+0xac>
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	81 2b       	or	r24, r17
  b0:	8a b9       	out	0x0a, r24	; 10
  b2:	df 91       	pop	r29
  b4:	cf 91       	pop	r28
  b6:	1f 91       	pop	r17
  b8:	0f 91       	pop	r16
  ba:	ff 90       	pop	r15
  bc:	ef 90       	pop	r14
  be:	08 95       	ret

Disassembly of section .text.getPinsVal:

000000c0 <getPinsVal>:
  c0:	0f 93       	push	r16
  c2:	1f 93       	push	r17
  c4:	cf 93       	push	r28
  c6:	df 93       	push	r29
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62
  cc:	bf 81       	ldd	r27, Y+7	; 0x07
  ce:	fe 01       	movw	r30, r28
  d0:	39 96       	adiw	r30, 0x09	; 9
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	a0 e0       	ldi	r26, 0x00	; 0
  d8:	28 85       	ldd	r18, Y+8	; 0x08
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	41 e0       	ldi	r20, 0x01	; 1
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	82 17       	cp	r24, r18
  e2:	93 07       	cpc	r25, r19
  e4:	04 f4       	brge	.+0      	; 0xe6 <getPinsVal+0x26>
  e6:	60 81       	ld	r22, Z
  e8:	32 96       	adiw	r30, 0x02	; 2
  ea:	8a 01       	movw	r16, r20
  ec:	00 c0       	rjmp	.+0      	; 0xee <getPinsVal+0x2e>
  ee:	00 0f       	add	r16, r16
  f0:	11 1f       	adc	r17, r17
  f2:	6a 95       	dec	r22
  f4:	02 f4       	brpl	.+0      	; 0xf6 <getPinsVal+0x36>
  f6:	a0 2b       	or	r26, r16
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	00 c0       	rjmp	.+0      	; 0xfc <getPinsVal+0x3c>
  fc:	b2 34       	cpi	r27, 0x42	; 66
  fe:	01 f0       	breq	.+0      	; 0x100 <getPinsVal+0x40>
 100:	b3 34       	cpi	r27, 0x43	; 67
 102:	01 f0       	breq	.+0      	; 0x104 <getPinsVal+0x44>
 104:	b1 34       	cpi	r27, 0x41	; 65
 106:	01 f4       	brne	.+0      	; 0x108 <getPinsVal+0x48>
 108:	80 b1       	in	r24, 0x00	; 0
 10a:	00 c0       	rjmp	.+0      	; 0x10c <getPinsVal+0x4c>
 10c:	83 b1       	in	r24, 0x03	; 3
 10e:	00 c0       	rjmp	.+0      	; 0x110 <getPinsVal+0x50>
 110:	86 b1       	in	r24, 0x06	; 6
 112:	8a 23       	and	r24, r26
 114:	00 c0       	rjmp	.+0      	; 0x116 <getPinsVal+0x56>
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	df 91       	pop	r29
 11a:	cf 91       	pop	r28
 11c:	1f 91       	pop	r17
 11e:	0f 91       	pop	r16
 120:	08 95       	ret

Disassembly of section .text.setPinsVal:

000001e2 <setPinsVal>:
 1e2:	ef 92       	push	r14
 1e4:	ff 92       	push	r15
 1e6:	0f 93       	push	r16
 1e8:	1f 93       	push	r17
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	09 85       	ldd	r16, Y+9	; 0x09
 1f4:	8a 85       	ldd	r24, Y+10	; 0x0a
 1f6:	9b 85       	ldd	r25, Y+11	; 0x0b
 1f8:	fe 01       	movw	r30, r28
 1fa:	3d 96       	adiw	r30, 0x0d	; 13
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	10 e0       	ldi	r17, 0x00	; 0
 202:	4c 85       	ldd	r20, Y+12	; 0x0c
 204:	50 e0       	ldi	r21, 0x00	; 0
 206:	61 e0       	ldi	r22, 0x01	; 1
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	24 17       	cp	r18, r20
 20c:	35 07       	cpc	r19, r21
 20e:	04 f4       	brge	.+0      	; 0x210 <setPinsVal+0x2e>
 210:	a0 81       	ld	r26, Z
 212:	32 96       	adiw	r30, 0x02	; 2
 214:	7b 01       	movw	r14, r22
 216:	00 c0       	rjmp	.+0      	; 0x218 <setPinsVal+0x36>
 218:	ee 0c       	add	r14, r14
 21a:	ff 1c       	adc	r15, r15
 21c:	aa 95       	dec	r26
 21e:	02 f4       	brpl	.+0      	; 0x220 <setPinsVal+0x3e>
 220:	1e 29       	or	r17, r14
 222:	2f 5f       	subi	r18, 0xFF	; 255
 224:	3f 4f       	sbci	r19, 0xFF	; 255
 226:	00 c0       	rjmp	.+0      	; 0x228 <setPinsVal+0x46>
 228:	02 34       	cpi	r16, 0x42	; 66
 22a:	01 f0       	breq	.+0      	; 0x22c <setPinsVal+0x4a>
 22c:	00 f4       	brcc	.+0      	; 0x22e <setPinsVal+0x4c>
 22e:	01 34       	cpi	r16, 0x41	; 65
 230:	01 f0       	breq	.+0      	; 0x232 <setPinsVal+0x50>
 232:	00 c0       	rjmp	.+0      	; 0x234 <setPinsVal+0x52>
 234:	03 34       	cpi	r16, 0x43	; 67
 236:	01 f0       	breq	.+0      	; 0x238 <setPinsVal+0x56>
 238:	04 34       	cpi	r16, 0x44	; 68
 23a:	01 f0       	breq	.+0      	; 0x23c <setPinsVal+0x5a>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <setPinsVal+0x5c>
 23e:	89 2b       	or	r24, r25
 240:	01 f0       	breq	.+0      	; 0x242 <setPinsVal+0x60>
 242:	82 b1       	in	r24, 0x02	; 2
 244:	10 95       	com	r17
 246:	18 23       	and	r17, r24
 248:	12 b9       	out	0x02, r17	; 2
 24a:	00 c0       	rjmp	.+0      	; 0x24c <setPinsVal+0x6a>
 24c:	82 b1       	in	r24, 0x02	; 2
 24e:	81 2b       	or	r24, r17
 250:	82 b9       	out	0x02, r24	; 2
 252:	00 c0       	rjmp	.+0      	; 0x254 <setPinsVal+0x72>
 254:	89 2b       	or	r24, r25
 256:	01 f0       	breq	.+0      	; 0x258 <setPinsVal+0x76>
 258:	85 b1       	in	r24, 0x05	; 5
 25a:	10 95       	com	r17
 25c:	18 23       	and	r17, r24
 25e:	15 b9       	out	0x05, r17	; 5
 260:	00 c0       	rjmp	.+0      	; 0x262 <setPinsVal+0x80>
 262:	85 b1       	in	r24, 0x05	; 5
 264:	81 2b       	or	r24, r17
 266:	85 b9       	out	0x05, r24	; 5
 268:	00 c0       	rjmp	.+0      	; 0x26a <setPinsVal+0x88>
 26a:	89 2b       	or	r24, r25
 26c:	01 f0       	breq	.+0      	; 0x26e <setPinsVal+0x8c>
 26e:	88 b1       	in	r24, 0x08	; 8
 270:	10 95       	com	r17
 272:	18 23       	and	r17, r24
 274:	18 b9       	out	0x08, r17	; 8
 276:	00 c0       	rjmp	.+0      	; 0x278 <setPinsVal+0x96>
 278:	88 b1       	in	r24, 0x08	; 8
 27a:	81 2b       	or	r24, r17
 27c:	88 b9       	out	0x08, r24	; 8
 27e:	00 c0       	rjmp	.+0      	; 0x280 <setPinsVal+0x9e>
 280:	89 2b       	or	r24, r25
 282:	01 f0       	breq	.+0      	; 0x284 <setPinsVal+0xa2>
 284:	8b b1       	in	r24, 0x0b	; 11
 286:	10 95       	com	r17
 288:	18 23       	and	r17, r24
 28a:	1b b9       	out	0x0b, r17	; 11
 28c:	00 c0       	rjmp	.+0      	; 0x28e <setPinsVal+0xac>
 28e:	8b b1       	in	r24, 0x0b	; 11
 290:	81 2b       	or	r24, r17
 292:	8b b9       	out	0x0b, r24	; 11
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	1f 91       	pop	r17
 29a:	0f 91       	pop	r16
 29c:	ff 90       	pop	r15
 29e:	ef 90       	pop	r14
 2a0:	08 95       	ret

pot.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.potAngle 0000002a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.potVolts 0000000e  00000000  00000000  0000005e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .comment      00000012  00000000  00000000  0000006c  2**0
                  CONTENTS, READONLY

Disassembly of section .text.potAngle:

00000000 <potAngle>:
   0:	0e 94 00 00 	call	0	; 0x0 <potAngle>
   4:	8c 56       	subi	r24, 0x6C	; 108
   6:	92 40       	sbci	r25, 0x02	; 2
   8:	bc 01       	movw	r22, r24
   a:	88 27       	eor	r24, r24
   c:	77 fd       	sbrc	r23, 7
   e:	80 95       	com	r24
  10:	98 2f       	mov	r25, r24
  12:	0e 94 00 00 	call	0	; 0x0 <potAngle>
  16:	20 e8       	ldi	r18, 0x80	; 128
  18:	35 e0       	ldi	r19, 0x05	; 5
  1a:	49 e6       	ldi	r20, 0x69	; 105
  1c:	5e e3       	ldi	r21, 0x3E	; 62
  1e:	0e 94 00 00 	call	0	; 0x0 <potAngle>
  22:	0e 94 00 00 	call	0	; 0x0 <potAngle>
  26:	cb 01       	movw	r24, r22
  28:	08 95       	ret

Disassembly of section .text.potVolts:

0000002a <potVolts>:
  2a:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  2e:	88 0f       	add	r24, r24
  30:	99 1f       	adc	r25, r25
  32:	88 0f       	add	r24, r24
  34:	99 1f       	adc	r25, r25
  36:	08 95       	ret

timer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initTimer 000000b4  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.getTimer 0000002c  00000000  00000000  000000e8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.initPWM 00000038  00000000  00000000  00000114  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.setPWM  0000002e  00000000  00000000  0000014c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.setCompValue 00000044  00000000  00000000  0000017a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.setTimerInterrupt 0000002a  00000000  00000000  000001be  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.__vector_16 00000052  00000000  00000000  000001e8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.__vector_13 00000052  00000000  00000000  0000023a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.__vector_9 00000052  00000000  00000000  0000028c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .bss.timer2   00000002  00000000  00000000  000002de  2**0
                  ALLOC
 13 .bss.timer1   00000002  00000000  00000000  000002de  2**0
                  ALLOC
 14 .bss.timer0   00000002  00000000  00000000  000002de  2**0
                  ALLOC
 15 .comment      00000012  00000000  00000000  000002de  2**0
                  CONTENTS, READONLY

Disassembly of section .text.initTimer:

00000000 <initTimer>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	eb 01       	movw	r28, r22
   c:	f8 94       	cli
   e:	a2 e1       	ldi	r26, 0x12	; 18
  10:	b0 e0       	ldi	r27, 0x00	; 0
  12:	0e 94 00 00 	call	0	; 0x0 <initTimer>
  16:	28 ee       	ldi	r18, 0xE8	; 232
  18:	33 e0       	ldi	r19, 0x03	; 3
  1a:	40 e0       	ldi	r20, 0x00	; 0
  1c:	50 e0       	ldi	r21, 0x00	; 0
  1e:	0e 94 00 00 	call	0	; 0x0 <initTimer>
  22:	21 50       	subi	r18, 0x01	; 1
  24:	31 09       	sbc	r19, r1
  26:	41 09       	sbc	r20, r1
  28:	51 09       	sbc	r21, r1
  2a:	01 30       	cpi	r16, 0x01	; 1
  2c:	11 05       	cpc	r17, r1
  2e:	01 f0       	breq	.+0      	; 0x30 <initTimer+0x30>
  30:	02 30       	cpi	r16, 0x02	; 2
  32:	11 05       	cpc	r17, r1
  34:	01 f0       	breq	.+0      	; 0x36 <initTimer+0x36>
  36:	01 2b       	or	r16, r17
  38:	01 f4       	brne	.+0      	; 0x3a <initTimer+0x3a>
  3a:	ce 01       	movw	r24, r28
  3c:	46 e0       	ldi	r20, 0x06	; 6
  3e:	88 0f       	add	r24, r24
  40:	99 1f       	adc	r25, r25
  42:	4a 95       	dec	r20
  44:	01 f4       	brne	.+0      	; 0x46 <initTimer+0x46>
  46:	c8 2b       	or	r28, r24
  48:	c4 bd       	out	0x24, r28	; 36
  4a:	85 e0       	ldi	r24, 0x05	; 5
  4c:	85 bd       	out	0x25, r24	; 37
  4e:	27 bd       	out	0x27, r18	; 39
  50:	80 91 6e 00 	lds	r24, 0x006E
  54:	82 60       	ori	r24, 0x02	; 2
  56:	80 93 6e 00 	sts	0x006E, r24
  5a:	00 c0       	rjmp	.+0      	; 0x5c <initTimer+0x5c>
  5c:	c2 95       	swap	r28
  5e:	cc 0f       	add	r28, r28
  60:	cc 0f       	add	r28, r28
  62:	c0 7c       	andi	r28, 0xC0	; 192
  64:	c0 93 80 00 	sts	0x0080, r28
  68:	8d e0       	ldi	r24, 0x0D	; 13
  6a:	80 93 81 00 	sts	0x0081, r24
  6e:	30 93 89 00 	sts	0x0089, r19
  72:	20 93 88 00 	sts	0x0088, r18
  76:	80 91 6f 00 	lds	r24, 0x006F
  7a:	82 60       	ori	r24, 0x02	; 2
  7c:	80 93 6f 00 	sts	0x006F, r24
  80:	00 c0       	rjmp	.+0      	; 0x82 <initTimer+0x82>
  82:	ce 01       	movw	r24, r28
  84:	36 e0       	ldi	r19, 0x06	; 6
  86:	88 0f       	add	r24, r24
  88:	99 1f       	adc	r25, r25
  8a:	3a 95       	dec	r19
  8c:	01 f4       	brne	.+0      	; 0x8e <initTimer+0x8e>
  8e:	c8 2b       	or	r28, r24
  90:	c0 93 b0 00 	sts	0x00B0, r28
  94:	85 e0       	ldi	r24, 0x05	; 5
  96:	80 93 b1 00 	sts	0x00B1, r24
  9a:	20 93 b3 00 	sts	0x00B3, r18
  9e:	80 91 70 00 	lds	r24, 0x0070
  a2:	82 60       	ori	r24, 0x02	; 2
  a4:	80 93 70 00 	sts	0x0070, r24
  a8:	78 94       	sei
  aa:	df 91       	pop	r29
  ac:	cf 91       	pop	r28
  ae:	1f 91       	pop	r17
  b0:	0f 91       	pop	r16
  b2:	08 95       	ret

Disassembly of section .text.getTimer:

000000b4 <getTimer>:
  b4:	81 30       	cpi	r24, 0x01	; 1
  b6:	91 05       	cpc	r25, r1
  b8:	01 f0       	breq	.+0      	; 0xba <getTimer+0x6>
  ba:	82 30       	cpi	r24, 0x02	; 2
  bc:	91 05       	cpc	r25, r1
  be:	01 f0       	breq	.+0      	; 0xc0 <getTimer+0xc>
  c0:	89 2b       	or	r24, r25
  c2:	01 f4       	brne	.+0      	; 0xc4 <getTimer+0x10>
  c4:	86 b5       	in	r24, 0x26	; 38
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <getTimer+0x14>
  c8:	80 91 84 00 	lds	r24, 0x0084
  cc:	90 91 85 00 	lds	r25, 0x0085
  d0:	08 95       	ret
  d2:	80 91 b2 00 	lds	r24, 0x00B2
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	08 95       	ret
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	08 95       	ret

Disassembly of section .text.initPWM:

00000194 <initPWM>:
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	01 f0       	breq	.+0      	; 0x198 <initPWM+0x4>
 198:	00 f0       	brcs	.+0      	; 0x19a <initPWM+0x6>
 19a:	82 30       	cpi	r24, 0x02	; 2
 19c:	01 f0       	breq	.+0      	; 0x19e <initPWM+0xa>
 19e:	08 95       	ret
 1a0:	24 9a       	sbi	0x04, 4	; 4
 1a2:	81 e6       	ldi	r24, 0x61	; 97
 1a4:	84 bd       	out	0x24, r24	; 36
 1a6:	8d e0       	ldi	r24, 0x0D	; 13
 1a8:	85 bd       	out	0x25, r24	; 37
 1aa:	08 95       	ret
 1ac:	54 9a       	sbi	0x0a, 4	; 10
 1ae:	83 ea       	ldi	r24, 0xA3	; 163
 1b0:	80 93 80 00 	sts	0x0080, r24
 1b4:	85 e1       	ldi	r24, 0x15	; 21
 1b6:	80 93 81 00 	sts	0x0081, r24
 1ba:	08 95       	ret
 1bc:	56 9a       	sbi	0x0a, 6	; 10
 1be:	81 e6       	ldi	r24, 0x61	; 97
 1c0:	80 93 b0 00 	sts	0x00B0, r24
 1c4:	8d e0       	ldi	r24, 0x0D	; 13
 1c6:	80 93 b1 00 	sts	0x00B1, r24
 1ca:	08 95       	ret

Disassembly of section .text.setPWM:

00000360 <setPWM>:
 360:	81 30       	cpi	r24, 0x01	; 1
 362:	01 f0       	breq	.+0      	; 0x364 <setPWM+0x4>
 364:	00 f0       	brcs	.+0      	; 0x366 <setPWM+0x6>
 366:	82 30       	cpi	r24, 0x02	; 2
 368:	01 f0       	breq	.+0      	; 0x36a <setPWM+0xa>
 36a:	08 95       	ret
 36c:	67 bd       	out	0x27, r22	; 39
 36e:	48 bd       	out	0x28, r20	; 40
 370:	08 95       	ret
 372:	70 93 89 00 	sts	0x0089, r23
 376:	60 93 88 00 	sts	0x0088, r22
 37a:	50 93 8b 00 	sts	0x008B, r21
 37e:	40 93 8a 00 	sts	0x008A, r20
 382:	08 95       	ret
 384:	60 93 b3 00 	sts	0x00B3, r22
 388:	40 93 b4 00 	sts	0x00B4, r20
 38c:	08 95       	ret

Disassembly of section .text.setCompValue:

000006ee <setCompValue>:
 6ee:	cf 93       	push	r28
 6f0:	c8 2f       	mov	r28, r24
 6f2:	a2 e1       	ldi	r26, 0x12	; 18
 6f4:	b0 e0       	ldi	r27, 0x00	; 0
 6f6:	9a 01       	movw	r18, r20
 6f8:	ab 01       	movw	r20, r22
 6fa:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 6fe:	28 ee       	ldi	r18, 0xE8	; 232
 700:	33 e0       	ldi	r19, 0x03	; 3
 702:	40 e0       	ldi	r20, 0x00	; 0
 704:	50 e0       	ldi	r21, 0x00	; 0
 706:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
 70a:	21 50       	subi	r18, 0x01	; 1
 70c:	31 09       	sbc	r19, r1
 70e:	41 09       	sbc	r20, r1
 710:	51 09       	sbc	r21, r1
 712:	c1 30       	cpi	r28, 0x01	; 1
 714:	01 f0       	breq	.+0      	; 0x716 <setCompValue+0x28>
 716:	00 f0       	brcs	.+0      	; 0x718 <setCompValue+0x2a>
 718:	c2 30       	cpi	r28, 0x02	; 2
 71a:	01 f4       	brne	.+0      	; 0x71c <setCompValue+0x2e>
 71c:	20 93 b3 00 	sts	0x00B3, r18
 720:	00 c0       	rjmp	.+0      	; 0x722 <setCompValue+0x34>
 722:	27 bd       	out	0x27, r18	; 39
 724:	00 c0       	rjmp	.+0      	; 0x726 <setCompValue+0x38>
 726:	30 93 89 00 	sts	0x0089, r19
 72a:	20 93 88 00 	sts	0x0088, r18
 72e:	cf 91       	pop	r28
 730:	08 95       	ret

Disassembly of section .text.setTimerInterrupt:

00000e20 <setTimerInterrupt>:
 e20:	81 30       	cpi	r24, 0x01	; 1
 e22:	01 f0       	breq	.+0      	; 0xe24 <setTimerInterrupt+0x4>
 e24:	00 f0       	brcs	.+0      	; 0xe26 <setTimerInterrupt+0x6>
 e26:	82 30       	cpi	r24, 0x02	; 2
 e28:	01 f0       	breq	.+0      	; 0xe2a <setTimerInterrupt+0xa>
 e2a:	08 95       	ret
 e2c:	70 93 00 00 	sts	0x0000, r23
 e30:	60 93 00 00 	sts	0x0000, r22
 e34:	08 95       	ret
 e36:	70 93 00 00 	sts	0x0000, r23
 e3a:	60 93 00 00 	sts	0x0000, r22
 e3e:	08 95       	ret
 e40:	70 93 00 00 	sts	0x0000, r23
 e44:	60 93 00 00 	sts	0x0000, r22
 e48:	08 95       	ret

Disassembly of section .text.__vector_16:

00001c6a <__vector_16>:
    1c6a:	1f 92       	push	r1
    1c6c:	0f 92       	push	r0
    1c6e:	0f b6       	in	r0, 0x3f	; 63
    1c70:	0f 92       	push	r0
    1c72:	11 24       	eor	r1, r1
    1c74:	2f 93       	push	r18
    1c76:	3f 93       	push	r19
    1c78:	4f 93       	push	r20
    1c7a:	5f 93       	push	r21
    1c7c:	6f 93       	push	r22
    1c7e:	7f 93       	push	r23
    1c80:	8f 93       	push	r24
    1c82:	9f 93       	push	r25
    1c84:	af 93       	push	r26
    1c86:	bf 93       	push	r27
    1c88:	ef 93       	push	r30
    1c8a:	ff 93       	push	r31
    1c8c:	e0 91 00 00 	lds	r30, 0x0000
    1c90:	f0 91 00 00 	lds	r31, 0x0000
    1c94:	30 97       	sbiw	r30, 0x00	; 0
    1c96:	01 f0       	breq	.+0      	; 0x1c98 <__vector_16+0x2e>
    1c98:	09 95       	icall
    1c9a:	ff 91       	pop	r31
    1c9c:	ef 91       	pop	r30
    1c9e:	bf 91       	pop	r27
    1ca0:	af 91       	pop	r26
    1ca2:	9f 91       	pop	r25
    1ca4:	8f 91       	pop	r24
    1ca6:	7f 91       	pop	r23
    1ca8:	6f 91       	pop	r22
    1caa:	5f 91       	pop	r21
    1cac:	4f 91       	pop	r20
    1cae:	3f 91       	pop	r19
    1cb0:	2f 91       	pop	r18
    1cb2:	0f 90       	pop	r0
    1cb4:	0f be       	out	0x3f, r0	; 63
    1cb6:	0f 90       	pop	r0
    1cb8:	1f 90       	pop	r1
    1cba:	18 95       	reti

Disassembly of section .text.__vector_13:

00003926 <__vector_13>:
    3926:	1f 92       	push	r1
    3928:	0f 92       	push	r0
    392a:	0f b6       	in	r0, 0x3f	; 63
    392c:	0f 92       	push	r0
    392e:	11 24       	eor	r1, r1
    3930:	2f 93       	push	r18
    3932:	3f 93       	push	r19
    3934:	4f 93       	push	r20
    3936:	5f 93       	push	r21
    3938:	6f 93       	push	r22
    393a:	7f 93       	push	r23
    393c:	8f 93       	push	r24
    393e:	9f 93       	push	r25
    3940:	af 93       	push	r26
    3942:	bf 93       	push	r27
    3944:	ef 93       	push	r30
    3946:	ff 93       	push	r31
    3948:	e0 91 00 00 	lds	r30, 0x0000
    394c:	f0 91 00 00 	lds	r31, 0x0000
    3950:	30 97       	sbiw	r30, 0x00	; 0
    3952:	01 f0       	breq	.+0      	; 0x3954 <__vector_13+0x2e>
    3954:	09 95       	icall
    3956:	ff 91       	pop	r31
    3958:	ef 91       	pop	r30
    395a:	bf 91       	pop	r27
    395c:	af 91       	pop	r26
    395e:	9f 91       	pop	r25
    3960:	8f 91       	pop	r24
    3962:	7f 91       	pop	r23
    3964:	6f 91       	pop	r22
    3966:	5f 91       	pop	r21
    3968:	4f 91       	pop	r20
    396a:	3f 91       	pop	r19
    396c:	2f 91       	pop	r18
    396e:	0f 90       	pop	r0
    3970:	0f be       	out	0x3f, r0	; 63
    3972:	0f 90       	pop	r0
    3974:	1f 90       	pop	r1
    3976:	18 95       	reti

Disassembly of section .text.__vector_9:

0000729e <__vector_9>:
    729e:	1f 92       	push	r1
    72a0:	0f 92       	push	r0
    72a2:	0f b6       	in	r0, 0x3f	; 63
    72a4:	0f 92       	push	r0
    72a6:	11 24       	eor	r1, r1
    72a8:	2f 93       	push	r18
    72aa:	3f 93       	push	r19
    72ac:	4f 93       	push	r20
    72ae:	5f 93       	push	r21
    72b0:	6f 93       	push	r22
    72b2:	7f 93       	push	r23
    72b4:	8f 93       	push	r24
    72b6:	9f 93       	push	r25
    72b8:	af 93       	push	r26
    72ba:	bf 93       	push	r27
    72bc:	ef 93       	push	r30
    72be:	ff 93       	push	r31
    72c0:	e0 91 00 00 	lds	r30, 0x0000
    72c4:	f0 91 00 00 	lds	r31, 0x0000
    72c8:	30 97       	sbiw	r30, 0x00	; 0
    72ca:	01 f0       	breq	.+0      	; 0x72cc <__vector_9+0x2e>
    72cc:	09 95       	icall
    72ce:	ff 91       	pop	r31
    72d0:	ef 91       	pop	r30
    72d2:	bf 91       	pop	r27
    72d4:	af 91       	pop	r26
    72d6:	9f 91       	pop	r25
    72d8:	8f 91       	pop	r24
    72da:	7f 91       	pop	r23
    72dc:	6f 91       	pop	r22
    72de:	5f 91       	pop	r21
    72e0:	4f 91       	pop	r20
    72e2:	3f 91       	pop	r19
    72e4:	2f 91       	pop	r18
    72e6:	0f 90       	pop	r0
    72e8:	0f be       	out	0x3f, r0	; 63
    72ea:	0f 90       	pop	r0
    72ec:	1f 90       	pop	r1
    72ee:	18 95       	reti
